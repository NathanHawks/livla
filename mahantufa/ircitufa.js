var camxes = (function(){
  /*
   * Generated by PEG.js 0.7.0.
   *
   * http://pegjs.majda.cz/
   */
  
  function quote(s) {
    /*
     * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a
     * string literal except for the closing quote character, backslash,
     * carriage return, line separator, paragraph separator, and line feed.
     * Any character may appear in the form of an escape sequence.
     *
     * For portability, we also escape escape all control and non-ASCII
     * characters. Note that "\0" and "\v" escape sequences are not used
     * because JSHint does not like the first and IE the second.
     */
     return '"' + s
      .replace(/\\/g, '\\\\')  // backslash
      .replace(/"/g, '\\"')    // closing quote character
      .replace(/\x08/g, '\\b') // backspace
      .replace(/\t/g, '\\t')   // horizontal tab
      .replace(/\n/g, '\\n')   // line feed
      .replace(/\f/g, '\\f')   // form feed
      .replace(/\r/g, '\\r')   // carriage return
      .replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g, escape)
      + '"';
  }
  
  var result = {
    /*
     * Parses the input with a generated parser. If the parsing is successfull,
     * returns a value explicitly or implicitly specified by the grammar from
     * which the parser was generated (see |PEG.buildParser|). If the parsing is
     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.
     */
    parse: function(input, startRule) {
      var parseFunctions = {
        "text": parse_text,
        "indicators": parse_indicators,
        "zei_clause": parse_zei_clause,
        "zei_clause_no_pre": parse_zei_clause_no_pre,
        "bu_clause": parse_bu_clause,
        "bu_clause_no_pre": parse_bu_clause_no_pre,
        "zei_tail": parse_zei_tail,
        "bu_tail": parse_bu_tail,
        "pre_zei_bu": parse_pre_zei_bu,
        "dot_star": parse_dot_star,
        "post_clause": parse_post_clause,
        "indicator_post_clause": parse_indicator_post_clause,
        "pre_clause": parse_pre_clause,
        "any_word_SA_handling": parse_any_word_SA_handling,
        "su_clause": parse_su_clause,
        "si_clause": parse_si_clause,
        "erasable_clause": parse_erasable_clause,
        "su_word": parse_su_word,
        "BRIVLA_clause": parse_BRIVLA_clause,
        "BRIVLA_pre": parse_BRIVLA_pre,
        "CMAVO_clause": parse_CMAVO_clause,
        "CMAVO_pre": parse_CMAVO_pre,
        "BAhE_clause": parse_BAhE_clause,
        "BAhE_pre": parse_BAhE_pre,
        "BAhE_post": parse_BAhE_post,
        "BU_clause": parse_BU_clause,
        "BU_pre": parse_BU_pre,
        "BU_post": parse_BU_post,
        "BY_clause": parse_BY_clause,
        "BY_pre": parse_BY_pre,
        "LEhU_clause": parse_LEhU_clause,
        "LEhU_pre": parse_LEhU_pre,
        "LEhU_post": parse_LEhU_post,
        "LOhU_clause": parse_LOhU_clause,
        "LOhU_pre": parse_LOhU_pre,
        "SA_clause": parse_SA_clause,
        "SA_pre": parse_SA_pre,
        "SA_post": parse_SA_post,
        "SI_clause": parse_SI_clause,
        "SU_clause": parse_SU_clause,
        "SU_pre": parse_SU_pre,
        "UI_clause": parse_UI_clause,
        "UI_pre": parse_UI_pre,
        "ZEI_clause": parse_ZEI_clause,
        "ZEI_pre": parse_ZEI_pre,
        "ZEI_post": parse_ZEI_post,
        "ZO_clause": parse_ZO_clause,
        "ZO_pre": parse_ZO_pre,
        "ZOI_clause": parse_ZOI_clause,
        "ZOI_pre": parse_ZOI_pre,
        "BRIVLA": parse_BRIVLA,
        "CMAVO": parse_CMAVO,
        "lojban_word": parse_lojban_word,
        "any_word": parse_any_word,
        "zoi_open": parse_zoi_open,
        "zoi_word": parse_zoi_word,
        "zoi_close": parse_zoi_close,
        "cmevla": parse_cmevla,
        "snavla": parse_snavla,
        "cipcme": parse_cipcme,
        "cmavo": parse_cmavo,
        "CVCy_lujvo": parse_CVCy_lujvo,
        "cmavo_form": parse_cmavo_form,
        "brivla": parse_brivla,
        "brivla_core": parse_brivla_core,
        "slinkuhi": parse_slinkuhi,
        "rafsi_string": parse_rafsi_string,
        "gismu": parse_gismu,
        "y_rafsi": parse_y_rafsi,
        "hy_rafsi": parse_hy_rafsi,
        "long_rafsi": parse_long_rafsi,
        "CVC_rafsi": parse_CVC_rafsi,
        "CCV_rafsi": parse_CCV_rafsi,
        "CVV_rafsi": parse_CVV_rafsi,
        "final_syllable": parse_final_syllable,
        "zihevlas_syllable": parse_zihevlas_syllable,
        "stressed_syllable": parse_stressed_syllable,
        "stressed_diphthong": parse_stressed_diphthong,
        "stressed_vowel": parse_stressed_vowel,
        "unstressed_syllable": parse_unstressed_syllable,
        "unstressed_diphthong": parse_unstressed_diphthong,
        "unstressed_vowel": parse_unstressed_vowel,
        "stress": parse_stress,
        "stressed": parse_stressed,
        "any_syllable": parse_any_syllable,
        "any_unstressed_syllable": parse_any_unstressed_syllable,
        "medial_syllable": parse_medial_syllable,
        "syllable": parse_syllable,
        "consonantal_syllable": parse_consonantal_syllable,
        "coda": parse_coda,
        "onset": parse_onset,
        "glide_onset": parse_glide_onset,
        "nucleus": parse_nucleus,
        "glide": parse_glide,
        "diphthong": parse_diphthong,
        "vowel": parse_vowel,
        "a": parse_a,
        "e": parse_e,
        "i": parse_i,
        "o": parse_o,
        "u": parse_u,
        "y_glide": parse_y_glide,
        "y": parse_y,
        "w": parse_w,
        "cluster": parse_cluster,
        "initial": parse_initial,
        "initial_pair": parse_initial_pair,
        "affricate": parse_affricate,
        "liquid": parse_liquid,
        "sibilant": parse_sibilant,
        "consonant": parse_consonant,
        "syllabic": parse_syllabic,
        "voiced": parse_voiced,
        "unvoiced": parse_unvoiced,
        "l": parse_l,
        "m": parse_m,
        "n": parse_n,
        "r": parse_r,
        "q": parse_q,
        "b": parse_b,
        "d": parse_d,
        "g": parse_g,
        "v": parse_v,
        "j": parse_j,
        "z": parse_z,
        "s": parse_s,
        "c": parse_c,
        "x": parse_x,
        "k": parse_k,
        "f": parse_f,
        "p": parse_p,
        "t": parse_t,
        "h": parse_h,
        "digit": parse_digit,
        "post_word": parse_post_word,
        "pause": parse_pause,
        "EOF": parse_EOF,
        "comma": parse_comma,
        "non_lojban_word": parse_non_lojban_word,
        "non_space": parse_non_space,
        "space_char": parse_space_char,
        "spaces": parse_spaces,
        "initial_spaces": parse_initial_spaces,
        "ybu": parse_ybu,
        "BAhE": parse_BAhE,
        "BU": parse_BU,
        "BY": parse_BY,
        "LEhU": parse_LEhU,
        "LOhU": parse_LOhU,
        "SA": parse_SA,
        "SI": parse_SI,
        "SU": parse_SU,
        "UI": parse_UI,
        "Y": parse_Y,
        "ZEI": parse_ZEI,
        "ZO": parse_ZO,
        "ZOI": parse_ZOI
      };
      
      if (startRule !== undefined) {
        if (parseFunctions[startRule] === undefined) {
          throw new Error("Invalid rule name: " + quote(startRule) + ".");
        }
      } else {
        startRule = "text";
      }
      
      var pos = 0;
      var reportFailures = 0;
      var rightmostFailuresPos = 0;
      var rightmostFailuresExpected = [];
      var cache = {};
      
      function padLeft(input, padding, length) {
        var result = input;
        
        var padLength = length - input.length;
        for (var i = 0; i < padLength; i++) {
          result = padding + result;
        }
        
        return result;
      }
      
      function escape(ch) {
        var charCode = ch.charCodeAt(0);
        var escapeChar;
        var length;
        
        if (charCode <= 0xFF) {
          escapeChar = 'x';
          length = 2;
        } else {
          escapeChar = 'u';
          length = 4;
        }
        
        return '\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);
      }
      
      function matchFailed(failure) {
        if (pos < rightmostFailuresPos) {
          return;
        }
        
        if (pos > rightmostFailuresPos) {
          rightmostFailuresPos = pos;
          rightmostFailuresExpected = [];
        }
        
        rightmostFailuresExpected.push(failure);
      }
      
      function parse_text() {
        var cacheKey = "text@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pause();
        result0 = result0 !== null ? result0 : "";
        if (result0 !== null) {
          result1 = [];
          result2 = parse_si_clause();
          while (result2 !== null) {
            result1.push(result2);
            result2 = parse_si_clause();
          }
          if (result1 !== null) {
            result2 = [];
            result3 = parse_BRIVLA_clause();
            if (result3 === null) {
              result3 = parse_ZO_clause();
              if (result3 === null) {
                result3 = parse_LOhU_clause();
                if (result3 === null) {
                  result3 = parse_ZOI_clause();
                  if (result3 === null) {
                    result3 = parse_BY_clause();
                    if (result3 === null) {
                      result3 = parse_CMAVO_clause();
                    }
                  }
                }
              }
            }
            while (result3 !== null) {
              result2.push(result3);
              result3 = parse_BRIVLA_clause();
              if (result3 === null) {
                result3 = parse_ZO_clause();
                if (result3 === null) {
                  result3 = parse_LOhU_clause();
                  if (result3 === null) {
                    result3 = parse_ZOI_clause();
                    if (result3 === null) {
                      result3 = parse_BY_clause();
                      if (result3 === null) {
                        result3 = parse_CMAVO_clause();
                      }
                    }
                  }
                }
              }
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return expr })(pos0, result0[2]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_indicators() {
        var cacheKey = "indicators@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result1 = parse_UI_clause();
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            result1 = parse_UI_clause();
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_BU_clause();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return expr })(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_zei_clause() {
        var cacheKey = "zei_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_zei_clause_no_pre();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { post.pre = pre; post.structure = (post.post ? [pre, _shell(post), post.post.indicators] : [pre, _shell(post)]).filter(_empty); return post })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_zei_clause_no_pre() {
        var cacheKey = "zei_clause_no_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2, pos3;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_zei_bu();
        if (result0 !== null) {
          result1 = [];
          pos2 = pos;
          pos3 = pos;
          result2 = parse_zei_tail();
          result2 = result2 !== null ? result2 : "";
          if (result2 !== null) {
            result3 = parse_bu_tail();
            if (result3 !== null) {
              result2 = [result2, result3];
            } else {
              result2 = null;
              pos = pos3;
            }
          } else {
            result2 = null;
            pos = pos3;
          }
          if (result2 !== null) {
            result2 = (function(offset, z, b) { return {zei_tail: z, bu_tail: b} })(pos2, result2[0], result2[1]);
          }
          if (result2 === null) {
            pos = pos2;
          }
          while (result2 !== null) {
            result1.push(result2);
            pos2 = pos;
            pos3 = pos;
            result2 = parse_zei_tail();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result3 = parse_bu_tail();
              if (result3 !== null) {
                result2 = [result2, result3];
              } else {
                result2 = null;
                pos = pos3;
              }
            } else {
              result2 = null;
              pos = pos3;
            }
            if (result2 !== null) {
              result2 = (function(offset, z, b) { return {zei_tail: z, bu_tail: b} })(pos2, result2[0], result2[1]);
            }
            if (result2 === null) {
              pos = pos2;
            }
          }
          if (result1 !== null) {
            result2 = parse_zei_tail();
            if (result2 !== null) {
              result3 = parse_post_clause();
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, bu, tail, post) {
          var r = {selmaho: "BRIVLA", word: pre.word, subsumed: [pre], post: post};
          bu.forEach(function (bu) {
            if (bu.zei_tail) {
              r.subsumed = r.subsumed.concat(bu.zei_tail.subsumed);
              r.word += bu.zei_tail.string;
            }
            r.subsumed = r.subsumed.concat(bu.bu_tail.subsumed);
            r.word += bu.bu_tail.string;
          });
          r.subsumed = r.subsumed.concat(tail.subsumed);
          r.word = "[" + r.word + tail.string + "]";
          return r;
        })(pos0, result0[0], result0[1], result0[2], result0[3]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_bu_clause() {
        var cacheKey = "bu_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_bu_clause_no_pre();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { post.pre = pre; post.structure = (post.post ? [pre, _shell(post), post.post.indicators] : [pre, _shell(post)]).filter(_empty); return post })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_bu_clause_no_pre() {
        var cacheKey = "bu_clause_no_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2, pos3;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_zei_bu();
        if (result0 !== null) {
          result1 = [];
          pos2 = pos;
          pos3 = pos;
          result2 = parse_bu_tail();
          result2 = result2 !== null ? result2 : "";
          if (result2 !== null) {
            result3 = parse_zei_tail();
            if (result3 !== null) {
              result2 = [result2, result3];
            } else {
              result2 = null;
              pos = pos3;
            }
          } else {
            result2 = null;
            pos = pos3;
          }
          if (result2 !== null) {
            result2 = (function(offset, b, z) { return {bu_tail: b, zei_tail: z} })(pos2, result2[0], result2[1]);
          }
          if (result2 === null) {
            pos = pos2;
          }
          while (result2 !== null) {
            result1.push(result2);
            pos2 = pos;
            pos3 = pos;
            result2 = parse_bu_tail();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result3 = parse_zei_tail();
              if (result3 !== null) {
                result2 = [result2, result3];
              } else {
                result2 = null;
                pos = pos3;
              }
            } else {
              result2 = null;
              pos = pos3;
            }
            if (result2 !== null) {
              result2 = (function(offset, b, z) { return {bu_tail: b, zei_tail: z} })(pos2, result2[0], result2[1]);
            }
            if (result2 === null) {
              pos = pos2;
            }
          }
          if (result1 !== null) {
            result2 = parse_bu_tail();
            if (result2 !== null) {
              result3 = parse_post_clause();
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, zei, tail, post) {
          var r = {selmaho: "BY", word: pre.word, subsumed: [pre], post: post };
          zei.forEach(function (zei) {
            if (zei.bu_tail) {
              r.subsumed = r.subsumed.concat(zei.bu_tail.subsumed);
              r.word += zei.bu_tail.string;
            }
            r.subsumed = r.subsumed.concat(zei.zei_tail.subsumed);
            r.word += zei.zei_tail.string;
          });
          r.subsumed = r.subsumed.concat(tail.subsumed);
          r.word = "[" + r.word + tail.string + "]";
          return r;
        })(pos0, result0[0], result0[1], result0[2], result0[3]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_zei_tail() {
        var cacheKey = "zei_tail@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result1 = parse_ZEI_clause();
        if (result1 !== null) {
          result2 = parse_any_word();
          if (result2 !== null) {
            result1 = [result1, result2];
          } else {
            result1 = null;
            pos = pos1;
          }
        } else {
          result1 = null;
          pos = pos1;
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            pos1 = pos;
            result1 = parse_ZEI_clause();
            if (result1 !== null) {
              result2 = parse_any_word();
              if (result2 !== null) {
                result1 = [result1, result2];
              } else {
                result1 = null;
                pos = pos1;
              }
            } else {
              result1 = null;
              pos = pos1;
            }
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {
          var r = {string: "", subsumed: []};
          expr.forEach(function (pair) {
            r.string += " zei " + pair[1].word;
            r.subsumed.push(pair[0]);
            r.subsumed.push(pair[1]);
          });
          return r;
        })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_bu_tail() {
        var cacheKey = "bu_tail@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0;
        
        pos0 = pos;
        result1 = parse_BU_clause();
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            result1 = parse_BU_clause();
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {
          return {
            subsumed: expr,
            string: expr.reduce(function(a, b) { return a + " " + b.word }, "")
          }
        })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_pre_zei_bu() {
        var cacheKey = "pre_zei_bu@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_BU_clause();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_ZEI_clause();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_SI_clause();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_SA_clause();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                result4 = parse_any_word_SA_handling();
                if (result4 !== null) {
                  result5 = parse_si_clause();
                  result5 = result5 !== null ? result5 : "";
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, word, si) {
          if (si) word.si = si;
          return word;
        })(pos0, result0[4], result0[5]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_dot_star() {
        var cacheKey = "dot_star@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0;
        
        pos0 = pos;
        result0 = [];
        if (input.length > pos) {
          result1 = input.charAt(pos);
          pos++;
        } else {
          result1 = null;
          if (reportFailures === 0) {
            matchFailed("any character");
          }
        }
        while (result1 !== null) {
          result0.push(result1);
          if (input.length > pos) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("any character");
            }
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { ret = ""; for (i in expr) ret += (expr[i] === " ") ? "_" : expr[i]; return ret; })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_post_clause() {
        var cacheKey = "post_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_spaces();
        result0 = result0 !== null ? result0 : "";
        if (result0 !== null) {
          result1 = parse_si_clause();
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_ZEI_clause();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_BU_clause();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                result4 = parse_indicators();
                result4 = result4 !== null ? result4 : "";
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, si, indicators) {
          var r = {};
          if (si) r.si = si;
          if (indicators) r.indicators = indicators;
          return (r.si || r.indicators) && r;
        })(pos0, result0[1], result0[4]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_indicator_post_clause() {
        var cacheKey = "indicator_post_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        reportFailures++;
        result0 = parse_BU_clause();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result1 = parse_spaces();
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result2 = parse_si_clause();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              pos1 = pos;
              reportFailures++;
              result3 = parse_ZEI_clause();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos1;
              }
              if (result3 !== null) {
                pos1 = pos;
                reportFailures++;
                result4 = parse_BU_clause();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos1;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos0;
                }
              } else {
                result0 = null;
                pos = pos0;
              }
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_pre_clause() {
        var cacheKey = "pre_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        
        result0 = [];
        result1 = parse_BAhE_clause();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_BAhE_clause();
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_any_word_SA_handling() {
        var cacheKey = "any_word_SA_handling@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        
        result0 = parse_BRIVLA_pre();
        if (result0 === null) {
          result0 = parse_BAhE_pre();
          if (result0 === null) {
            result0 = parse_BU_pre();
            if (result0 === null) {
              result0 = parse_BY_pre();
              if (result0 === null) {
                result0 = parse_LOhU_pre();
                if (result0 === null) {
                  result0 = parse_SA_pre();
                  if (result0 === null) {
                    result0 = parse_ZO_pre();
                    if (result0 === null) {
                      result0 = parse_ZOI_pre();
                      if (result0 === null) {
                        result0 = parse_CMAVO_pre();
                      }
                    }
                  }
                }
              }
            }
          }
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_su_clause() {
        var cacheKey = "su_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0;
        
        pos0 = pos;
        result0 = [];
        result1 = parse_erasable_clause();
        if (result1 === null) {
          result1 = parse_su_word();
        }
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_erasable_clause();
          if (result1 === null) {
            result1 = parse_su_word();
          }
        }
        if (result0 !== null) {
          result1 = parse_SU_clause();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_si_clause() {
        var cacheKey = "si_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0;
        
        pos0 = pos;
        result1 = parse_erasable_clause();
        if (result1 === null) {
          result1 = parse_pre_zei_bu();
          if (result1 === null) {
            result1 = parse_SA_clause();
          }
        }
        if (result1 !== null) {
          result2 = parse_si_clause();
          result2 = result2 !== null ? result2 : "";
          if (result2 !== null) {
            result3 = parse_SI_clause();
            if (result3 !== null) {
              result1 = [result1, result2, result3];
            } else {
              result1 = null;
              pos = pos0;
            }
          } else {
            result1 = null;
            pos = pos0;
          }
        } else {
          result1 = null;
          pos = pos0;
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            pos0 = pos;
            result1 = parse_erasable_clause();
            if (result1 === null) {
              result1 = parse_pre_zei_bu();
              if (result1 === null) {
                result1 = parse_SA_clause();
              }
            }
            if (result1 !== null) {
              result2 = parse_si_clause();
              result2 = result2 !== null ? result2 : "";
              if (result2 !== null) {
                result3 = parse_SI_clause();
                if (result3 !== null) {
                  result1 = [result1, result2, result3];
                } else {
                  result1 = null;
                  pos = pos0;
                }
              } else {
                result1 = null;
                pos = pos0;
              }
            } else {
              result1 = null;
              pos = pos0;
            }
          }
        } else {
          result0 = null;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_erasable_clause() {
        var cacheKey = "erasable_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_bu_clause_no_pre();
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_ZEI_clause();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_BU_clause();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_zei_clause_no_pre();
          if (result0 !== null) {
            pos2 = pos;
            reportFailures++;
            result1 = parse_ZEI_clause();
            reportFailures--;
            if (result1 === null) {
              result1 = "";
            } else {
              result1 = null;
              pos = pos2;
            }
            if (result1 !== null) {
              pos2 = pos;
              reportFailures++;
              result2 = parse_BU_clause();
              reportFailures--;
              if (result2 === null) {
                result2 = "";
              } else {
                result2 = null;
                pos = pos2;
              }
              if (result2 !== null) {
                result0 = [result0, result1, result2];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return {"erasable": expr}; })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_su_word() {
        var cacheKey = "su_word@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        reportFailures++;
        result0 = parse_SU_clause();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result1 = parse_any_word_SA_handling();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BRIVLA_clause() {
        var cacheKey = "BRIVLA_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_BRIVLA_pre();
        if (result0 !== null) {
          result1 = parse_post_clause();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          result0 = parse_zei_clause();
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BRIVLA_pre() {
        var cacheKey = "BRIVLA_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_BRIVLA();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word) { return _word_pre(word, pre) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CMAVO_clause() {
        var cacheKey = "CMAVO_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_CMAVO_pre();
        if (result0 !== null) {
          result1 = parse_post_clause();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CMAVO_pre() {
        var cacheKey = "CMAVO_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_CMAVO();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word) { return _word_pre(word, pre) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BAhE_clause() {
        var cacheKey = "BAhE_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_BAhE_pre();
        if (result0 !== null) {
          result1 = parse_BAhE_post();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { if (post) pre.si = post; return pre })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BAhE_pre() {
        var cacheKey = "BAhE_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_BAhE();
        if (result0 !== null) {
          result1 = parse_spaces();
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, word) { return _word_pre(word, null) })(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BAhE_post() {
        var cacheKey = "BAhE_post@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_si_clause();
        result0 = result0 !== null ? result0 : "";
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_ZEI_clause();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_BU_clause();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, si) { return si })(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BU_clause() {
        var cacheKey = "BU_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_BU_pre();
        if (result0 !== null) {
          result1 = parse_BU_post();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BU_pre() {
        var cacheKey = "BU_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_BU();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word) { return _word_pre(word, pre) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BU_post() {
        var cacheKey = "BU_post@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        
        result0 = parse_spaces();
        result0 = result0 !== null ? result0 : "";
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BY_clause() {
        var cacheKey = "BY_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_BY_pre();
        if (result0 !== null) {
          result1 = parse_post_clause();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          result0 = parse_bu_clause();
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BY_pre() {
        var cacheKey = "BY_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_BY();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word) { return _word_pre(word, pre) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LEhU_clause() {
        var cacheKey = "LEhU_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_LEhU_pre();
        if (result0 !== null) {
          result1 = parse_LEhU_post();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LEhU_pre() {
        var cacheKey = "LEhU_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_LEhU();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word) { return _word_pre(word, pre) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LEhU_post() {
        var cacheKey = "LEhU_post@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        
        result0 = parse_spaces();
        result0 = result0 !== null ? result0 : "";
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LOhU_clause() {
        var cacheKey = "LOhU_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_LOhU_pre();
        if (result0 !== null) {
          result1 = parse_post_clause();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LOhU_pre() {
        var cacheKey = "LOhU_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2, pos3, pos4;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_LOhU();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result3 = [];
              pos2 = pos;
              pos3 = pos;
              pos4 = pos;
              reportFailures++;
              result4 = parse_LEhU();
              reportFailures--;
              if (result4 === null) {
                result4 = "";
              } else {
                result4 = null;
                pos = pos4;
              }
              if (result4 !== null) {
                result5 = parse_any_word();
                if (result5 !== null) {
                  result4 = [result4, result5];
                } else {
                  result4 = null;
                  pos = pos3;
                }
              } else {
                result4 = null;
                pos = pos3;
              }
              if (result4 !== null) {
                result4 = (function(offset, w) { return w })(pos2, result4[1]);
              }
              if (result4 === null) {
                pos = pos2;
              }
              while (result4 !== null) {
                result3.push(result4);
                pos2 = pos;
                pos3 = pos;
                pos4 = pos;
                reportFailures++;
                result4 = parse_LEhU();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos4;
                }
                if (result4 !== null) {
                  result5 = parse_any_word();
                  if (result5 !== null) {
                    result4 = [result4, result5];
                  } else {
                    result4 = null;
                    pos = pos3;
                  }
                } else {
                  result4 = null;
                  pos = pos3;
                }
                if (result4 !== null) {
                  result4 = (function(offset, w) { return w })(pos2, result4[1]);
                }
                if (result4 === null) {
                  pos = pos2;
                }
              }
              if (result3 !== null) {
                result4 = parse_LEhU_clause();
                if (result4 !== null) {
                  result5 = parse_spaces();
                  result5 = result5 !== null ? result5 : "";
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word, quoted, subsumed) {
          word.quoted = quoted || [];
          word.subsumed = subsumed;
          word.single_word = word.word;
          word.word = "[" + word.word + " " + quoted.map(_bracket).join(" ") + " " + subsumed.word + "]";
          return _word_pre(word, pre);
        })(pos0, result0[0], result0[1], result0[3], result0[4]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SA_clause() {
        var cacheKey = "SA_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_SA_pre();
        if (result0 !== null) {
          result1 = parse_SA_post();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return pre })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SA_pre() {
        var cacheKey = "SA_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_SA();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word) { return _word_pre(word, pre) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SA_post() {
        var cacheKey = "SA_post@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        
        result0 = parse_spaces();
        result0 = result0 !== null ? result0 : "";
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SI_clause() {
        var cacheKey = "SI_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_spaces();
        result0 = result0 !== null ? result0 : "";
        if (result0 !== null) {
          result1 = parse_SI();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, word) { return word })(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SU_clause() {
        var cacheKey = "SU_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_SU_pre();
        if (result0 !== null) {
          result1 = parse_post_clause();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SU_pre() {
        var cacheKey = "SU_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_SU();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word) { return _word_pre(word, pre) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_UI_clause() {
        var cacheKey = "UI_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_UI_pre();
        if (result0 !== null) {
          result1 = parse_indicator_post_clause();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_UI_pre() {
        var cacheKey = "UI_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_UI();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word) { return _word_pre(word, pre) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZEI_clause() {
        var cacheKey = "ZEI_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_ZEI_pre();
        if (result0 !== null) {
          result1 = parse_ZEI_post();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return pre })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZEI_pre() {
        var cacheKey = "ZEI_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_ZEI();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word) { return _word_pre(word, pre) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZEI_post() {
        var cacheKey = "ZEI_post@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        
        result0 = parse_spaces();
        result0 = result0 !== null ? result0 : "";
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZO_clause() {
        var cacheKey = "ZO_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_ZO_pre();
        if (result0 !== null) {
          result1 = parse_post_clause();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZO_pre() {
        var cacheKey = "ZO_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_ZO();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result3 = parse_any_word();
              if (result3 !== null) {
                result4 = parse_spaces();
                result4 = result4 !== null ? result4 : "";
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word, quoted) {
          return _word_pre(_quote(word, quoted), pre)
        })(pos0, result0[0], result0[1], result0[3]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZOI_clause() {
        var cacheKey = "ZOI_clause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_ZOI_pre();
        if (result0 !== null) {
          result1 = parse_post_clause();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, post) { return _word_post(pre, post) })(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZOI_pre() {
        var cacheKey = "ZOI_pre@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5, result6, result7;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_pre_clause();
        if (result0 !== null) {
          result1 = parse_ZOI();
          if (result1 !== null) {
            result2 = parse_spaces();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result3 = parse_zoi_open();
              if (result3 !== null) {
                result4 = parse_spaces();
                result4 = result4 !== null ? result4 : "";
                if (result4 !== null) {
                  result5 = [];
                  result6 = parse_zoi_word();
                  while (result6 !== null) {
                    result5.push(result6);
                    result6 = parse_zoi_word();
                  }
                  if (result5 !== null) {
                    result6 = parse_zoi_close();
                    if (result6 !== null) {
                      result7 = parse_spaces();
                      result7 = result7 !== null ? result7 : "";
                      if (result7 !== null) {
                        result0 = [result0, result1, result2, result3, result4, result5, result6, result7];
                      } else {
                        result0 = null;
                        pos = pos1;
                      }
                    } else {
                      result0 = null;
                      pos = pos1;
                    }
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, pre, word, open, quoted, close) {
          word.subsumed = [open, close];
          word.quoted = quoted || [];
          word.quoted.word = _join(word.quoted);
          word.single_word = word.word;
          word.word = "[" + word.word + " " + open.word + " " + word.quoted.word + " " + close.word + "]";
          return _word_pre(word, pre)
        })(pos0, result0[0], result0[1], result0[3], result0[5], result0[6]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BRIVLA() {
        var cacheKey = "BRIVLA@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        result0 = parse_brivla();
        if (result0 === null) {
          result0 = parse_cmevla();
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _word("BRIVLA", expr) })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CMAVO() {
        var cacheKey = "CMAVO@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        result0 = parse_BAhE();
        if (result0 === null) {
          result0 = parse_BU();
          if (result0 === null) {
            result0 = parse_BY();
            if (result0 === null) {
              result0 = parse_LEhU();
              if (result0 === null) {
                result0 = parse_LOhU();
                if (result0 === null) {
                  result0 = parse_SA();
                  if (result0 === null) {
                    result0 = parse_SI();
                    if (result0 === null) {
                      result0 = parse_SU();
                      if (result0 === null) {
                        result0 = parse_UI();
                        if (result0 === null) {
                          result0 = parse_ZEI();
                          if (result0 === null) {
                            result0 = parse_ZO();
                            if (result0 === null) {
                              result0 = parse_ZOI();
                              if (result0 === null) {
                                pos0 = pos;
                                result0 = parse_cmavo();
                                if (result0 !== null) {
                                  result0 = (function(offset, expr) { return _word("CMAVO", expr) })(pos0, result0);
                                }
                                if (result0 === null) {
                                  pos = pos0;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_lojban_word() {
        var cacheKey = "lojban_word@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        result0 = parse_CMAVO();
        if (result0 === null) {
          result0 = parse_BRIVLA();
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return expr; })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_any_word() {
        var cacheKey = "any_word@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_lojban_word();
        if (result0 !== null) {
          result1 = parse_spaces();
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return expr; })(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_zoi_open() {
        var cacheKey = "zoi_open@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        result0 = parse_lojban_word();
        if (result0 !== null) {
          result0 = (function(offset, w) { return _zoi_assign_delim(w); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_zoi_word() {
        var cacheKey = "zoi_word@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result1 = parse_non_space();
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            result1 = parse_non_space();
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result1 = parse_spaces();
          if (result1 !== null) {
            result2 = (function(offset, w) { return (! _zoi_check_quote(w)); })(pos, result0) ? "" : null;
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return "";})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_zoi_close() {
        var cacheKey = "zoi_close@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0;
        
        pos0 = pos;
        result0 = parse_any_word();
        if (result0 !== null) {
          result1 = (function(offset, w) { return (_zoi_check_delim(w)); })(pos, result0) ? "" : null;
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_cmevla() {
        var cacheKey = "cmevla@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2, pos3, pos4, pos5;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_snavla();
        if (result0 === null) {
          result0 = parse_cipcme();
        }
        if (result0 !== null) {
          pos2 = pos;
          pos3 = pos;
          reportFailures++;
          pos4 = pos;
          result1 = parse_pause();
          if (result1 !== null) {
            pos5 = pos;
            reportFailures++;
            result2 = parse_glide();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos5;
            }
            if (result2 !== null) {
              pos5 = pos;
              reportFailures++;
              result3 = parse_nucleus();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos5;
              }
              if (result3 !== null) {
                pos5 = pos;
                reportFailures++;
                result4 = parse_cmevla();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos5;
                }
                if (result4 !== null) {
                  result1 = [result1, result2, result3, result4];
                } else {
                  result1 = null;
                  pos = pos4;
                }
              } else {
                result1 = null;
                pos = pos4;
              }
            } else {
              result1 = null;
              pos = pos4;
            }
          } else {
            result1 = null;
            pos = pos4;
          }
          reportFailures--;
          if (result1 !== null) {
            result1 = "";
            pos = pos3;
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result1 = (function(offset) {return "."})(pos2);
          }
          if (result1 === null) {
            pos = pos2;
          }
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return "." + _join(expr) })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_snavla() {
        var cacheKey = "snavla@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1;
        
        pos0 = pos;
        result0 = parse_h();
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_consonant();
          if (result0 !== null) {
            result1 = parse_consonant();
            if (result1 !== null) {
              result2 = parse_consonant();
              if (result2 !== null) {
                result3 = parse_consonant();
                if (result3 !== null) {
                  result0 = [result0, result1, result2, result3];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        }
        if (result0 !== null) {
          result1 = [];
          result2 = parse_nucleus();
          if (result2 === null) {
            result2 = parse_glide();
            if (result2 === null) {
              result2 = parse_h();
              if (result2 === null) {
                result2 = parse_consonant();
                if (result2 === null) {
                  result2 = parse_digit();
                }
              }
            }
          }
          while (result2 !== null) {
            result1.push(result2);
            result2 = parse_nucleus();
            if (result2 === null) {
              result2 = parse_glide();
              if (result2 === null) {
                result2 = parse_h();
                if (result2 === null) {
                  result2 = parse_consonant();
                  if (result2 === null) {
                    result2 = parse_digit();
                  }
                }
              }
            }
          }
          if (result1 !== null) {
            pos1 = pos;
            reportFailures++;
            result2 = parse_pause();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos1;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_cipcme() {
        var cacheKey = "cipcme@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        pos0 = pos;
        result0 = [];
        result1 = parse_any_syllable();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_any_syllable();
        }
        if (result0 !== null) {
          pos1 = pos;
          reportFailures++;
          result1 = parse_any_syllable();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos1;
          }
          if (result1 !== null) {
            result3 = parse_nucleus();
            if (result3 === null) {
              result3 = parse_glide();
              if (result3 === null) {
                result3 = parse_h();
                if (result3 === null) {
                  result3 = parse_consonant();
                  if (result3 === null) {
                    result3 = parse_digit();
                  }
                }
              }
            }
            if (result3 !== null) {
              result2 = [];
              while (result3 !== null) {
                result2.push(result3);
                result3 = parse_nucleus();
                if (result3 === null) {
                  result3 = parse_glide();
                  if (result3 === null) {
                    result3 = parse_h();
                    if (result3 === null) {
                      result3 = parse_consonant();
                      if (result3 === null) {
                        result3 = parse_digit();
                      }
                    }
                  }
                }
              }
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result3 = [];
              result4 = parse_any_syllable();
              while (result4 !== null) {
                result3.push(result4);
                result4 = parse_any_syllable();
              }
              if (result3 !== null) {
                pos1 = pos;
                reportFailures++;
                result4 = parse_pause();
                reportFailures--;
                if (result4 !== null) {
                  result4 = "";
                  pos = pos1;
                } else {
                  result4 = null;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos0;
                }
              } else {
                result0 = null;
                pos = pos0;
              }
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_cmavo() {
        var cacheKey = "cmavo@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_CVCy_lujvo();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          result1 = parse_cmavo_form();
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CVCy_lujvo() {
        var cacheKey = "CVCy_lujvo@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_consonant();
        if (result0 !== null) {
          result1 = parse_unstressed_vowel();
          if (result1 !== null) {
            result2 = parse_consonant();
            if (result2 !== null) {
              result3 = parse_y();
              if (result3 !== null) {
                result4 = [];
                result5 = parse_any_unstressed_syllable();
                while (result5 !== null) {
                  result4.push(result5);
                  result5 = parse_any_unstressed_syllable();
                }
                if (result4 !== null) {
                  result5 = parse_brivla_core();
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_consonant();
          if (result0 !== null) {
            result1 = parse_stressed_vowel();
            if (result1 !== null) {
              result2 = parse_consonant();
              if (result2 !== null) {
                result3 = parse_y();
                if (result3 !== null) {
                  result4 = parse_zihevlas_syllable();
                  if (result4 === null) {
                    result4 = parse_final_syllable();
                  }
                  if (result4 !== null) {
                    result0 = [result0, result1, result2, result3, result4];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_cmavo_form() {
        var cacheKey = "cmavo_form@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2, pos3;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_h();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_cluster();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            result2 = parse_onset();
            if (result2 !== null) {
              result3 = [];
              pos2 = pos;
              result4 = parse_nucleus();
              if (result4 !== null) {
                result5 = parse_h();
                if (result5 === null) {
                  result5 = parse_glide();
                }
                if (result5 !== null) {
                  result4 = [result4, result5];
                } else {
                  result4 = null;
                  pos = pos2;
                }
              } else {
                result4 = null;
                pos = pos2;
              }
              while (result4 !== null) {
                result3.push(result4);
                pos2 = pos;
                result4 = parse_nucleus();
                if (result4 !== null) {
                  result5 = parse_h();
                  if (result5 === null) {
                    result5 = parse_glide();
                  }
                  if (result5 !== null) {
                    result4 = [result4, result5];
                  } else {
                    result4 = null;
                    pos = pos2;
                  }
                } else {
                  result4 = null;
                  pos = pos2;
                }
              }
              if (result3 !== null) {
                pos2 = pos;
                pos3 = pos;
                reportFailures++;
                result4 = parse_stressed();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos3;
                }
                if (result4 !== null) {
                  result5 = parse_nucleus();
                  if (result5 !== null) {
                    result4 = [result4, result5];
                  } else {
                    result4 = null;
                    pos = pos2;
                  }
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 === null) {
                  pos2 = pos;
                  result4 = parse_nucleus();
                  if (result4 !== null) {
                    pos3 = pos;
                    reportFailures++;
                    result5 = parse_cluster();
                    reportFailures--;
                    if (result5 === null) {
                      result5 = "";
                    } else {
                      result5 = null;
                      pos = pos3;
                    }
                    if (result5 !== null) {
                      result4 = [result4, result5];
                    } else {
                      result4 = null;
                      pos = pos2;
                    }
                  } else {
                    result4 = null;
                    pos = pos2;
                  }
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          result1 = parse_y();
          if (result1 !== null) {
            result0 = [];
            while (result1 !== null) {
              result0.push(result1);
              result1 = parse_y();
            }
          } else {
            result0 = null;
          }
          if (result0 === null) {
            result0 = parse_digit();
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_brivla() {
        var cacheKey = "brivla@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2, pos3;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        pos3 = pos;
        reportFailures++;
        result0 = parse_slinkuhi();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos3;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "."})(pos2);
        }
        if (result0 === null) {
          pos = pos2;
        }
        result0 = result0 !== null ? result0 : "";
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_cmavo();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              result3 = parse_unstressed_syllable();
              if (result3 !== null) {
                result4 = [];
                result5 = parse_any_unstressed_syllable();
                while (result5 !== null) {
                  result4.push(result5);
                  result5 = parse_any_unstressed_syllable();
                }
                if (result4 !== null) {
                  result3 = [result3, result4];
                } else {
                  result3 = null;
                  pos = pos2;
                }
              } else {
                result3 = null;
                pos = pos2;
              }
              result3 = result3 !== null ? result3 : "";
              if (result3 !== null) {
                result4 = parse_brivla_core();
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_brivla_core() {
        var cacheKey = "brivla_core@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_stressed_syllable();
        if (result0 !== null) {
          result1 = [];
          result2 = parse_medial_syllable();
          while (result2 !== null) {
            result1.push(result2);
            result2 = parse_medial_syllable();
          }
          if (result1 !== null) {
            result2 = parse_zihevlas_syllable();
            if (result2 === null) {
              result2 = parse_final_syllable();
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_slinkuhi() {
        var cacheKey = "slinkuhi@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_rafsi_string();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          result1 = parse_consonant();
          if (result1 !== null) {
            result2 = parse_rafsi_string();
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_rafsi_string() {
        var cacheKey = "rafsi_string@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result1 = parse_gismu();
        if (result1 !== null) {
          pos2 = pos;
          reportFailures++;
          result2 = parse_post_word();
          reportFailures--;
          if (result2 !== null) {
            result2 = "";
            pos = pos2;
          } else {
            result2 = null;
          }
          if (result2 !== null) {
            result1 = [result1, result2];
          } else {
            result1 = null;
            pos = pos1;
          }
        } else {
          result1 = null;
          pos = pos1;
        }
        if (result1 === null) {
          pos1 = pos;
          result1 = parse_long_rafsi();
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_y();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result1 = [result1, result2];
            } else {
              result1 = null;
              pos = pos1;
            }
          } else {
            result1 = null;
            pos = pos1;
          }
          if (result1 === null) {
            result1 = parse_CVC_rafsi();
            if (result1 === null) {
              result1 = parse_CCV_rafsi();
              if (result1 === null) {
                result1 = parse_CVV_rafsi();
              }
            }
          }
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            pos1 = pos;
            result1 = parse_gismu();
            if (result1 !== null) {
              pos2 = pos;
              reportFailures++;
              result2 = parse_post_word();
              reportFailures--;
              if (result2 !== null) {
                result2 = "";
                pos = pos2;
              } else {
                result2 = null;
              }
              if (result2 !== null) {
                result1 = [result1, result2];
              } else {
                result1 = null;
                pos = pos1;
              }
            } else {
              result1 = null;
              pos = pos1;
            }
            if (result1 === null) {
              pos1 = pos;
              result1 = parse_long_rafsi();
              if (result1 !== null) {
                pos2 = pos;
                reportFailures++;
                result2 = parse_y();
                reportFailures--;
                if (result2 !== null) {
                  result2 = "";
                  pos = pos2;
                } else {
                  result2 = null;
                }
                if (result2 !== null) {
                  result1 = [result1, result2];
                } else {
                  result1 = null;
                  pos = pos1;
                }
              } else {
                result1 = null;
                pos = pos1;
              }
              if (result1 === null) {
                result1 = parse_CVC_rafsi();
                if (result1 === null) {
                  result1 = parse_CCV_rafsi();
                  if (result1 === null) {
                    result1 = parse_CVV_rafsi();
                  }
                }
              }
            }
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos1 = pos;
          reportFailures++;
          result1 = parse_y();
          if (result1 === null) {
            result1 = parse_post_word();
          }
          reportFailures--;
          if (result1 !== null) {
            result1 = "";
            pos = pos1;
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_gismu() {
        var cacheKey = "gismu@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        result0 = parse_initial_pair();
        if (result0 !== null) {
          result1 = parse_stressed_vowel();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos2;
          }
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 === null) {
          pos2 = pos;
          result0 = parse_consonant();
          if (result0 !== null) {
            result1 = parse_stressed_vowel();
            if (result1 !== null) {
              result2 = parse_consonant();
              if (result2 !== null) {
                result0 = [result0, result1, result2];
              } else {
                result0 = null;
                pos = pos2;
              }
            } else {
              result0 = null;
              pos = pos2;
            }
          } else {
            result0 = null;
            pos = pos2;
          }
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_final_syllable();
          reportFailures--;
          if (result1 !== null) {
            result1 = "";
            pos = pos2;
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result2 = parse_consonant();
            if (result2 !== null) {
              result3 = parse_vowel();
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_post_word();
                reportFailures--;
                if (result4 !== null) {
                  result4 = "";
                  pos = pos2;
                } else {
                  result4 = null;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_y_rafsi() {
        var cacheKey = "y_rafsi@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_long_rafsi();
        if (result0 === null) {
          result0 = parse_CVC_rafsi();
        }
        if (result0 !== null) {
          result1 = parse_y();
          if (result1 !== null) {
            result2 = parse_h();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_hy_rafsi() {
        var cacheKey = "hy_rafsi@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_long_rafsi();
        if (result0 !== null) {
          result1 = parse_vowel();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          result0 = parse_CCV_rafsi();
          if (result0 === null) {
            result0 = parse_CVV_rafsi();
          }
        }
        if (result0 !== null) {
          result1 = parse_h();
          if (result1 !== null) {
            result2 = parse_y();
            if (result2 !== null) {
              result3 = parse_h();
              result3 = result3 !== null ? result3 : "";
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos0;
              }
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_long_rafsi() {
        var cacheKey = "long_rafsi@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_initial_pair();
        if (result0 !== null) {
          result1 = parse_vowel();
          if (result1 !== null) {
            result2 = parse_consonant();
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_consonant();
          if (result0 !== null) {
            result1 = parse_vowel();
            if (result1 !== null) {
              result2 = parse_consonant();
              if (result2 !== null) {
                result3 = parse_consonant();
                if (result3 !== null) {
                  result0 = [result0, result1, result2, result3];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CVC_rafsi() {
        var cacheKey = "CVC_rafsi@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_consonant();
        if (result0 !== null) {
          result1 = parse_vowel();
          if (result1 !== null) {
            result2 = parse_consonant();
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CCV_rafsi() {
        var cacheKey = "CCV_rafsi@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_initial_pair();
        if (result0 !== null) {
          result1 = parse_vowel();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CVV_rafsi() {
        var cacheKey = "CVV_rafsi@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_consonant();
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_vowel();
          if (result1 !== null) {
            result2 = parse_h();
            if (result2 !== null) {
              result3 = parse_vowel();
              if (result3 !== null) {
                result1 = [result1, result2, result3];
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 === null) {
            result1 = parse_diphthong();
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) { return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_final_syllable() {
        var cacheKey = "final_syllable@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_onset();
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_y();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_stressed();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result3 = parse_nucleus();
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_cmevla();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  pos2 = pos;
                  reportFailures++;
                  result5 = parse_post_word();
                  reportFailures--;
                  if (result5 !== null) {
                    result5 = "";
                    pos = pos2;
                  } else {
                    result5 = null;
                  }
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_zihevlas_syllable() {
        var cacheKey = "zihevlas_syllable@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5, result6, result7, result8, result9, result10;
        var pos0, pos1, pos2, pos3, pos4, pos5;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_onset();
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_y();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_stressed();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result3 = parse_nucleus();
              if (result3 !== null) {
                result4 = parse_consonant();
                if (result4 !== null) {
                  result5 = parse_consonant();
                  result5 = result5 !== null ? result5 : "";
                  if (result5 !== null) {
                    pos2 = pos;
                    reportFailures++;
                    result6 = parse_pause();
                    reportFailures--;
                    if (result6 !== null) {
                      result6 = "";
                      pos = pos2;
                    } else {
                      result6 = null;
                    }
                    if (result6 !== null) {
                      pos2 = pos;
                      pos3 = pos;
                      reportFailures++;
                      pos4 = pos;
                      result7 = parse_pause();
                      if (result7 !== null) {
                        pos5 = pos;
                        reportFailures++;
                        result8 = parse_nucleus();
                        reportFailures--;
                        if (result8 === null) {
                          result8 = "";
                        } else {
                          result8 = null;
                          pos = pos5;
                        }
                        if (result8 !== null) {
                          pos5 = pos;
                          reportFailures++;
                          result9 = parse_glide();
                          reportFailures--;
                          if (result9 === null) {
                            result9 = "";
                          } else {
                            result9 = null;
                            pos = pos5;
                          }
                          if (result9 !== null) {
                            pos5 = pos;
                            reportFailures++;
                            result10 = parse_cmevla();
                            reportFailures--;
                            if (result10 === null) {
                              result10 = "";
                            } else {
                              result10 = null;
                              pos = pos5;
                            }
                            if (result10 !== null) {
                              result7 = [result7, result8, result9, result10];
                            } else {
                              result7 = null;
                              pos = pos4;
                            }
                          } else {
                            result7 = null;
                            pos = pos4;
                          }
                        } else {
                          result7 = null;
                          pos = pos4;
                        }
                      } else {
                        result7 = null;
                        pos = pos4;
                      }
                      reportFailures--;
                      if (result7 !== null) {
                        result7 = "";
                        pos = pos3;
                      } else {
                        result7 = null;
                      }
                      if (result7 !== null) {
                        result7 = (function(offset) {return "."})(pos2);
                      }
                      if (result7 === null) {
                        pos = pos2;
                      }
                      result7 = result7 !== null ? result7 : "";
                      if (result7 !== null) {
                        result0 = [result0, result1, result2, result3, result4, result5, result6, result7];
                      } else {
                        result0 = null;
                        pos = pos1;
                      }
                    } else {
                      result0 = null;
                      pos = pos1;
                    }
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_stressed_syllable() {
        var cacheKey = "stressed_syllable@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_stressed();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result1 = parse_syllable();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_syllable();
          if (result0 !== null) {
            pos2 = pos;
            reportFailures++;
            result1 = parse_stress();
            reportFailures--;
            if (result1 !== null) {
              result1 = "";
              pos = pos2;
            } else {
              result1 = null;
            }
            if (result1 !== null) {
              result0 = [result0, result1];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr).replace(/[aeiou]/, function (a) {return _stressed_vowels[a]});})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_stressed_diphthong() {
        var cacheKey = "stressed_diphthong@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_stressed();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result1 = parse_diphthong();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_diphthong();
          if (result0 !== null) {
            pos2 = pos;
            reportFailures++;
            result1 = parse_stress();
            reportFailures--;
            if (result1 !== null) {
              result1 = "";
              pos = pos2;
            } else {
              result1 = null;
            }
            if (result1 !== null) {
              result0 = [result0, result1];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_stressed_vowel() {
        var cacheKey = "stressed_vowel@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_stressed();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result1 = parse_vowel();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_vowel();
          if (result0 !== null) {
            pos2 = pos;
            reportFailures++;
            result1 = parse_stress();
            reportFailures--;
            if (result1 !== null) {
              result1 = "";
              pos = pos2;
            } else {
              result1 = null;
            }
            if (result1 !== null) {
              result0 = [result0, result1];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_unstressed_syllable() {
        var cacheKey = "unstressed_syllable@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_stressed();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          result1 = parse_syllable();
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_stress();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          result0 = parse_consonantal_syllable();
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_unstressed_diphthong() {
        var cacheKey = "unstressed_diphthong@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_stressed();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          result1 = parse_diphthong();
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_stress();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_unstressed_vowel() {
        var cacheKey = "unstressed_vowel@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_stressed();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          result1 = parse_vowel();
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_stress();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_stress() {
        var cacheKey = "stress@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_consonant();
        if (result1 === null) {
          result1 = parse_glide();
        }
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_consonant();
          if (result1 === null) {
            result1 = parse_glide();
          }
        }
        if (result0 !== null) {
          result1 = parse_h();
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result2 = parse_y();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result3 = parse_syllable();
              if (result3 !== null) {
                result4 = parse_pause();
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_stressed() {
        var cacheKey = "stressed@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_onset();
        if (result0 !== null) {
          result1 = [];
          result2 = parse_comma();
          while (result2 !== null) {
            result1.push(result2);
            result2 = parse_comma();
          }
          if (result1 !== null) {
            if (/^[AEIOU]/.test(input.charAt(pos))) {
              result2 = input.charAt(pos);
              pos++;
            } else {
              result2 = null;
              if (reportFailures === 0) {
                matchFailed("[AEIOU]");
              }
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_any_syllable() {
        var cacheKey = "any_syllable@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_onset();
        if (result0 !== null) {
          result1 = parse_nucleus();
          if (result1 !== null) {
            result2 = parse_coda();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          result0 = parse_consonantal_syllable();
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_any_unstressed_syllable() {
        var cacheKey = "any_unstressed_syllable@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_stressed();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          result1 = parse_onset();
          if (result1 !== null) {
            result2 = parse_nucleus();
            if (result2 !== null) {
              result3 = parse_coda();
              result3 = result3 !== null ? result3 : "";
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_stress();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          result0 = parse_consonantal_syllable();
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_medial_syllable() {
        var cacheKey = "medial_syllable@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_onset();
        if (result0 !== null) {
          result1 = parse_y();
          if (result1 !== null) {
            result2 = parse_coda();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          result0 = parse_consonantal_syllable();
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_syllable() {
        var cacheKey = "syllable@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_onset();
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_y();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            result2 = parse_nucleus();
            if (result2 !== null) {
              result3 = parse_coda();
              result3 = result3 !== null ? result3 : "";
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_consonantal_syllable() {
        var cacheKey = "consonantal_syllable@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_consonant();
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_any_syllable();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            result2 = parse_syllabic();
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_any_syllable();
              reportFailures--;
              if (result3 !== null) {
                result3 = "";
                pos = pos2;
              } else {
                result3 = null;
              }
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_coda() {
        var cacheKey = "coda@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_consonant();
        if (result0 !== null) {
          result1 = parse_consonant();
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_pause();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_consonant();
          if (result0 !== null) {
            result1 = parse_consonant();
            if (result1 !== null) {
              pos2 = pos;
              reportFailures++;
              result2 = parse_glide_onset();
              reportFailures--;
              if (result2 !== null) {
                result2 = "";
                pos = pos2;
              } else {
                result2 = null;
              }
              if (result2 !== null) {
                result0 = [result0, result1, result2];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
          if (result0 === null) {
            pos1 = pos;
            result0 = parse_consonant();
            if (result0 !== null) {
              pos2 = pos;
              reportFailures++;
              result1 = parse_glide_onset();
              if (result1 === null) {
                result1 = parse_consonantal_syllable();
              }
              reportFailures--;
              if (result1 !== null) {
                result1 = "";
                pos = pos2;
              } else {
                result1 = null;
              }
              if (result1 !== null) {
                result0 = [result0, result1];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_onset() {
        var cacheKey = "onset@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        result0 = parse_h();
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_consonant();
          result0 = result0 !== null ? result0 : "";
          if (result0 !== null) {
            result1 = parse_glide();
            if (result1 !== null) {
              result0 = [result0, result1];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
          if (result0 === null) {
            result0 = parse_initial();
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_glide_onset() {
        var cacheKey = "glide_onset@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0;
        
        pos0 = pos;
        result0 = parse_consonant();
        if (result0 !== null) {
          result1 = parse_glide();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_nucleus() {
        var cacheKey = "nucleus@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        result0 = parse_vowel();
        if (result0 === null) {
          result0 = parse_diphthong();
          if (result0 === null) {
            pos1 = pos;
            result0 = parse_y();
            if (result0 !== null) {
              pos2 = pos;
              reportFailures++;
              result1 = parse_nucleus();
              reportFailures--;
              if (result1 === null) {
                result1 = "";
              } else {
                result1 = null;
                pos = pos2;
              }
              if (result1 !== null) {
                result0 = [result0, result1];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_glide() {
        var cacheKey = "glide@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_y_glide();
        if (result0 === null) {
          result0 = parse_w();
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_nucleus();
          reportFailures--;
          if (result1 !== null) {
            result1 = "";
            pos = pos2;
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return expr;})(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_diphthong() {
        var cacheKey = "diphthong@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2, pos3, pos4;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        result0 = parse_a();
        if (result0 === null) {
          result0 = parse_e();
          if (result0 === null) {
            pos3 = pos;
            result0 = parse_i();
            if (result0 !== null) {
              pos4 = pos;
              reportFailures++;
              result1 = parse_i();
              reportFailures--;
              if (result1 === null) {
                result1 = "";
              } else {
                result1 = null;
                pos = pos4;
              }
              if (result1 !== null) {
                result0 = [result0, result1];
              } else {
                result0 = null;
                pos = pos3;
              }
            } else {
              result0 = null;
              pos = pos3;
            }
            if (result0 === null) {
              result0 = parse_o();
              if (result0 === null) {
                pos3 = pos;
                result0 = parse_u();
                if (result0 !== null) {
                  pos4 = pos;
                  reportFailures++;
                  result1 = parse_u();
                  reportFailures--;
                  if (result1 === null) {
                    result1 = "";
                  } else {
                    result1 = null;
                    pos = pos4;
                  }
                  if (result1 !== null) {
                    result0 = [result0, result1];
                  } else {
                    result0 = null;
                    pos = pos3;
                  }
                } else {
                  result0 = null;
                  pos = pos3;
                }
              }
            }
          }
        }
        if (result0 !== null) {
          pos3 = pos;
          result1 = parse_u();
          if (result1 !== null) {
            pos4 = pos;
            reportFailures++;
            result2 = parse_w();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos4;
            }
            if (result2 !== null) {
              result1 = [result1, result2];
            } else {
              result1 = null;
              pos = pos3;
            }
          } else {
            result1 = null;
            pos = pos3;
          }
          if (result1 === null) {
            pos3 = pos;
            result1 = parse_i();
            if (result1 !== null) {
              pos4 = pos;
              reportFailures++;
              result2 = parse_y_glide();
              reportFailures--;
              if (result2 === null) {
                result2 = "";
              } else {
                result2 = null;
                pos = pos4;
              }
              if (result2 !== null) {
                result1 = [result1, result2];
              } else {
                result1 = null;
                pos = pos3;
              }
            } else {
              result1 = null;
              pos = pos3;
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos2;
          }
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_nucleus();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_vowel() {
        var cacheKey = "vowel@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_a();
        if (result0 === null) {
          result0 = parse_e();
          if (result0 === null) {
            result0 = parse_i();
            if (result0 === null) {
              result0 = parse_o();
              if (result0 === null) {
                result0 = parse_u();
              }
            }
          }
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_nucleus();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return expr;})(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_a() {
        var cacheKey = "a@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[aA]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[aA]");
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "a";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_e() {
        var cacheKey = "e@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[eE]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[eE]");
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "e";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_i() {
        var cacheKey = "i@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[iI]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[iI]");
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "i";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_o() {
        var cacheKey = "o@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[oO]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[oO]");
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "o";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_u() {
        var cacheKey = "u@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[uU]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[uU]");
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "u";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_y_glide() {
        var cacheKey = "y_glide@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[yY]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[yY]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_nucleus();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "y";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_y() {
        var cacheKey = "y@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[yY]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[yY]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_nucleus();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "ə";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_w() {
        var cacheKey = "w@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[wW]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[wW]");
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "w";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_cluster() {
        var cacheKey = "cluster@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_consonant();
        if (result0 !== null) {
          result2 = parse_consonant();
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              result2 = parse_consonant();
            }
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_initial() {
        var cacheKey = "initial@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        result0 = parse_consonant();
        result0 = result0 !== null ? result0 : "";
        if (result0 !== null) {
          result1 = parse_consonant();
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result2 = parse_consonant();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos2;
            }
          } else {
            result0 = null;
            pos = pos2;
          }
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_consonant();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_glide();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_initial_pair() {
        var cacheKey = "initial_pair@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        result0 = parse_consonant();
        if (result0 !== null) {
          result1 = parse_consonant();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos2;
          }
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          result1 = parse_consonant();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_glide();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_affricate() {
        var cacheKey = "affricate@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_t();
        if (result0 !== null) {
          result1 = parse_c();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_t();
          if (result0 !== null) {
            result1 = parse_s();
            if (result1 !== null) {
              result0 = [result0, result1];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
          if (result0 === null) {
            pos1 = pos;
            result0 = parse_d();
            if (result0 !== null) {
              result1 = parse_j();
              if (result1 !== null) {
                result0 = [result0, result1];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
            if (result0 === null) {
              pos1 = pos;
              result0 = parse_d();
              if (result0 !== null) {
                result1 = parse_z();
                if (result1 !== null) {
                  result0 = [result0, result1];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            }
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_liquid() {
        var cacheKey = "liquid@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        result0 = parse_l();
        if (result0 === null) {
          result0 = parse_r();
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_sibilant() {
        var cacheKey = "sibilant@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        result0 = parse_c();
        if (result0 === null) {
          pos1 = pos;
          result0 = parse_s();
          if (result0 !== null) {
            pos2 = pos;
            reportFailures++;
            result1 = parse_x();
            reportFailures--;
            if (result1 === null) {
              result1 = "";
            } else {
              result1 = null;
              pos = pos2;
            }
            if (result1 !== null) {
              result0 = [result0, result1];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
          if (result0 === null) {
            pos1 = pos;
            result0 = parse_j();
            if (result0 === null) {
              result0 = parse_z();
            }
            if (result0 !== null) {
              pos2 = pos;
              reportFailures++;
              result1 = parse_n();
              reportFailures--;
              if (result1 === null) {
                result1 = "";
              } else {
                result1 = null;
                pos = pos2;
              }
              if (result1 !== null) {
                pos2 = pos;
                reportFailures++;
                result2 = parse_liquid();
                reportFailures--;
                if (result2 === null) {
                  result2 = "";
                } else {
                  result2 = null;
                  pos = pos2;
                }
                if (result2 !== null) {
                  result0 = [result0, result1, result2];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr); })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_consonant() {
        var cacheKey = "consonant@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        result0 = parse_voiced();
        if (result0 === null) {
          result0 = parse_unvoiced();
          if (result0 === null) {
            result0 = parse_syllabic();
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return expr;})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_syllabic() {
        var cacheKey = "syllabic@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        result0 = parse_l();
        if (result0 === null) {
          result0 = parse_m();
          if (result0 === null) {
            result0 = parse_n();
            if (result0 === null) {
              result0 = parse_r();
              if (result0 === null) {
                result0 = parse_q();
              }
            }
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return expr;})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_voiced() {
        var cacheKey = "voiced@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        result0 = parse_b();
        if (result0 === null) {
          result0 = parse_d();
          if (result0 === null) {
            result0 = parse_g();
            if (result0 === null) {
              result0 = parse_j();
              if (result0 === null) {
                result0 = parse_v();
                if (result0 === null) {
                  result0 = parse_z();
                }
              }
            }
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return expr;})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_unvoiced() {
        var cacheKey = "unvoiced@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        result0 = parse_c();
        if (result0 === null) {
          result0 = parse_f();
          if (result0 === null) {
            result0 = parse_k();
            if (result0 === null) {
              result0 = parse_p();
              if (result0 === null) {
                result0 = parse_s();
                if (result0 === null) {
                  result0 = parse_t();
                  if (result0 === null) {
                    result0 = parse_x();
                  }
                }
              }
            }
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return expr;})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_l() {
        var cacheKey = "l@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[lL]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[lL]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_l();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_affricate();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "l";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_m() {
        var cacheKey = "m@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[mM]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[mM]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_m();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_t();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "m";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_n() {
        var cacheKey = "n@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5, result6;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[nN]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[nN]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_n();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_affricate();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  pos2 = pos;
                  reportFailures++;
                  result5 = parse_p();
                  reportFailures--;
                  if (result5 === null) {
                    result5 = "";
                  } else {
                    result5 = null;
                    pos = pos2;
                  }
                  if (result5 !== null) {
                    pos2 = pos;
                    reportFailures++;
                    result6 = parse_b();
                    reportFailures--;
                    if (result6 === null) {
                      result6 = "";
                    } else {
                      result6 = null;
                      pos = pos2;
                    }
                    if (result6 !== null) {
                      result0 = [result0, result1, result2, result3, result4, result5, result6];
                    } else {
                      result0 = null;
                      pos = pos1;
                    }
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "n";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_r() {
        var cacheKey = "r@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[rR]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[rR]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_r();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "r";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_q() {
        var cacheKey = "q@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[qQ]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[qQ]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_q();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "q";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_b() {
        var cacheKey = "b@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[bB]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[bB]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_b();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_unvoiced();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "b";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_d() {
        var cacheKey = "d@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[dD]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[dD]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_d();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_unvoiced();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "d";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_g() {
        var cacheKey = "g@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[gG]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[gG]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_g();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_unvoiced();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "g";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_v() {
        var cacheKey = "v@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[vV]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[vV]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_v();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_unvoiced();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "v";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_j() {
        var cacheKey = "j@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[jJ]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[jJ]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_j();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_z();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  pos2 = pos;
                  reportFailures++;
                  result5 = parse_unvoiced();
                  reportFailures--;
                  if (result5 === null) {
                    result5 = "";
                  } else {
                    result5 = null;
                    pos = pos2;
                  }
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "j";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_z() {
        var cacheKey = "z@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[zZ]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[zZ]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_z();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_j();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  pos2 = pos;
                  reportFailures++;
                  result5 = parse_unvoiced();
                  reportFailures--;
                  if (result5 === null) {
                    result5 = "";
                  } else {
                    result5 = null;
                    pos = pos2;
                  }
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "z";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_s() {
        var cacheKey = "s@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[sS]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[sS]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_s();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_c();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  pos2 = pos;
                  reportFailures++;
                  result5 = parse_voiced();
                  reportFailures--;
                  if (result5 === null) {
                    result5 = "";
                  } else {
                    result5 = null;
                    pos = pos2;
                  }
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "s";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_c() {
        var cacheKey = "c@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[cC]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[cC]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_c();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_s();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  pos2 = pos;
                  reportFailures++;
                  result5 = parse_voiced();
                  reportFailures--;
                  if (result5 === null) {
                    result5 = "";
                  } else {
                    result5 = null;
                    pos = pos2;
                  }
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "c";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_x() {
        var cacheKey = "x@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[xX]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[xX]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_x();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_voiced();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "x";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_k() {
        var cacheKey = "k@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[kK]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[kK]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_k();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_voiced();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "k";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_f() {
        var cacheKey = "f@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[fF]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[fF]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_f();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_voiced();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "f";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_p() {
        var cacheKey = "p@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[pP]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[pP]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_p();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_voiced();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  pos2 = pos;
                  reportFailures++;
                  result5 = parse_m();
                  reportFailures--;
                  if (result5 === null) {
                    result5 = "";
                  } else {
                    result5 = null;
                    pos = pos2;
                  }
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "p";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_t() {
        var cacheKey = "t@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5, result6, result7;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[tT]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[tT]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_t();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                pos2 = pos;
                reportFailures++;
                result4 = parse_voiced();
                reportFailures--;
                if (result4 === null) {
                  result4 = "";
                } else {
                  result4 = null;
                  pos = pos2;
                }
                if (result4 !== null) {
                  pos2 = pos;
                  reportFailures++;
                  result5 = parse_m();
                  reportFailures--;
                  if (result5 === null) {
                    result5 = "";
                  } else {
                    result5 = null;
                    pos = pos2;
                  }
                  if (result5 !== null) {
                    pos2 = pos;
                    reportFailures++;
                    result6 = parse_n();
                    reportFailures--;
                    if (result6 === null) {
                      result6 = "";
                    } else {
                      result6 = null;
                      pos = pos2;
                    }
                    if (result6 !== null) {
                      pos2 = pos;
                      reportFailures++;
                      result7 = parse_p();
                      reportFailures--;
                      if (result7 === null) {
                        result7 = "";
                      } else {
                        result7 = null;
                        pos = pos2;
                      }
                      if (result7 !== null) {
                        result0 = [result0, result1, result2, result3, result4, result5, result6, result7];
                      } else {
                        result0 = null;
                        pos = pos1;
                      }
                    } else {
                      result0 = null;
                      pos = pos1;
                    }
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "t";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_h() {
        var cacheKey = "h@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^['hH]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("['hH]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_nucleus();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "'";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_digit() {
        var cacheKey = "digit@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          if (/^[0123456789]/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[0123456789]");
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_h();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              pos2 = pos;
              reportFailures++;
              result3 = parse_nucleus();
              reportFailures--;
              if (result3 === null) {
                result3 = "";
              } else {
                result3 = null;
                pos = pos2;
              }
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_post_word() {
        var cacheKey = "post_word@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        result0 = parse_pause();
        if (result0 === null) {
          pos1 = pos;
          pos2 = pos;
          reportFailures++;
          result0 = parse_nucleus();
          reportFailures--;
          if (result0 === null) {
            result0 = "";
          } else {
            result0 = null;
            pos = pos2;
          }
          if (result0 !== null) {
            pos2 = pos;
            reportFailures++;
            result1 = parse_slinkuhi();
            reportFailures--;
            if (result1 === null) {
              result1 = "";
            } else {
              result1 = null;
              pos = pos2;
            }
            if (result1 !== null) {
              pos2 = pos;
              reportFailures++;
              result2 = parse_cmevla();
              reportFailures--;
              if (result2 === null) {
                result2 = "";
              } else {
                result2 = null;
                pos = pos2;
              }
              if (result2 !== null) {
                result3 = parse_lojban_word();
                if (result3 !== null) {
                  result0 = [result0, result1, result2, result3];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_pause() {
        var cacheKey = "pause@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          result2 = parse_space_char();
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              result2 = parse_space_char();
            }
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          result0 = parse_EOF();
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_EOF() {
        var cacheKey = "EOF@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        result0 = [];
        result1 = parse_comma();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_comma();
        }
        if (result0 !== null) {
          pos2 = pos;
          reportFailures++;
          if (input.length > pos) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("any character");
            }
          }
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_comma() {
        var cacheKey = "comma@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        if (/^[,]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[,]");
          }
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_non_lojban_word() {
        var cacheKey = "non_lojban_word@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_lojban_word();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          result2 = parse_non_space();
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              result2 = parse_non_space();
            }
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_non_space() {
        var cacheKey = "non_space@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_space_char();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          if (input.length > pos) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("any character");
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_space_char() {
        var cacheKey = "space_char@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0;
        var pos0;
        
        pos0 = pos;
        if (/^[.\t\n\r?! ]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[.\\t\\n\\r?! ]");
          }
        }
        if (result0 !== null) {
          result0 = (function(offset) {return "";})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_spaces() {
        var cacheKey = "spaces@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_Y();
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos2;
        }
        if (result0 !== null) {
          result1 = parse_initial_spaces();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_initial_spaces() {
        var cacheKey = "initial_spaces@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2, pos3;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        result1 = [];
        result2 = parse_comma();
        while (result2 !== null) {
          result1.push(result2);
          result2 = parse_comma();
        }
        if (result1 !== null) {
          result2 = parse_space_char();
          if (result2 !== null) {
            result1 = [result1, result2];
          } else {
            result1 = null;
            pos = pos2;
          }
        } else {
          result1 = null;
          pos = pos2;
        }
        if (result1 === null) {
          pos2 = pos;
          pos3 = pos;
          reportFailures++;
          result1 = parse_ybu();
          reportFailures--;
          if (result1 === null) {
            result1 = "";
          } else {
            result1 = null;
            pos = pos3;
          }
          if (result1 !== null) {
            result2 = parse_Y();
            if (result2 !== null) {
              result1 = [result1, result2];
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            pos2 = pos;
            result1 = [];
            result2 = parse_comma();
            while (result2 !== null) {
              result1.push(result2);
              result2 = parse_comma();
            }
            if (result1 !== null) {
              result2 = parse_space_char();
              if (result2 !== null) {
                result1 = [result1, result2];
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
            if (result1 === null) {
              pos2 = pos;
              pos3 = pos;
              reportFailures++;
              result1 = parse_ybu();
              reportFailures--;
              if (result1 === null) {
                result1 = "";
              } else {
                result1 = null;
                pos = pos3;
              }
              if (result1 !== null) {
                result2 = parse_Y();
                if (result2 !== null) {
                  result1 = [result1, result2];
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            }
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result1 = parse_EOF();
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 === null) {
          result0 = parse_EOF();
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ybu() {
        var cacheKey = "ybu@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_Y();
        if (result0 !== null) {
          result1 = [];
          result2 = parse_space_char();
          while (result2 !== null) {
            result1.push(result2);
            result2 = parse_space_char();
          }
          if (result1 !== null) {
            result2 = parse_BU();
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return "ybu";})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BAhE() {
        var cacheKey = "BAhE@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_b();
          if (result1 !== null) {
            result2 = parse_a();
            if (result2 !== null) {
              result3 = parse_h();
              if (result3 !== null) {
                result4 = parse_e();
                if (result4 !== null) {
                  result1 = [result1, result2, result3, result4];
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 === null) {
            pos2 = pos;
            result1 = parse_z();
            if (result1 !== null) {
              result2 = parse_a();
              if (result2 !== null) {
                result3 = parse_h();
                if (result3 !== null) {
                  result4 = parse_e();
                  if (result4 !== null) {
                    result1 = [result1, result2, result3, result4];
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("BAhE", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BU() {
        var cacheKey = "BU@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_b();
          if (result1 !== null) {
            result2 = parse_u();
            if (result2 !== null) {
              result1 = [result1, result2];
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("BU", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_BY() {
        var cacheKey = "BY@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result1 = parse_ybu();
          if (result1 === null) {
            pos2 = pos;
            result1 = parse_j();
            if (result1 !== null) {
              result2 = parse_o();
              if (result2 !== null) {
                result3 = parse_h();
                if (result3 !== null) {
                  result4 = parse_o();
                  if (result4 !== null) {
                    result1 = [result1, result2, result3, result4];
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
            if (result1 === null) {
              pos2 = pos;
              result1 = parse_r();
              if (result1 !== null) {
                result2 = parse_u();
                if (result2 !== null) {
                  result3 = parse_h();
                  if (result3 !== null) {
                    result4 = parse_o();
                    if (result4 !== null) {
                      result1 = [result1, result2, result3, result4];
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
              if (result1 === null) {
                pos2 = pos;
                result1 = parse_g();
                if (result1 !== null) {
                  result2 = parse_e();
                  if (result2 !== null) {
                    result3 = parse_h();
                    if (result3 !== null) {
                      result4 = parse_o();
                      if (result4 !== null) {
                        result1 = [result1, result2, result3, result4];
                      } else {
                        result1 = null;
                        pos = pos2;
                      }
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
                if (result1 === null) {
                  pos2 = pos;
                  result1 = parse_j();
                  if (result1 !== null) {
                    result2 = parse_e();
                    if (result2 !== null) {
                      result3 = parse_h();
                      if (result3 !== null) {
                        result4 = parse_o();
                        if (result4 !== null) {
                          result1 = [result1, result2, result3, result4];
                        } else {
                          result1 = null;
                          pos = pos2;
                        }
                      } else {
                        result1 = null;
                        pos = pos2;
                      }
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                  if (result1 === null) {
                    pos2 = pos;
                    result1 = parse_l();
                    if (result1 !== null) {
                      result2 = parse_o();
                      if (result2 !== null) {
                        result3 = parse_h();
                        if (result3 !== null) {
                          result4 = parse_a();
                          if (result4 !== null) {
                            result1 = [result1, result2, result3, result4];
                          } else {
                            result1 = null;
                            pos = pos2;
                          }
                        } else {
                          result1 = null;
                          pos = pos2;
                        }
                      } else {
                        result1 = null;
                        pos = pos2;
                      }
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                    if (result1 === null) {
                      pos2 = pos;
                      result1 = parse_n();
                      if (result1 !== null) {
                        result2 = parse_a();
                        if (result2 !== null) {
                          result3 = parse_h();
                          if (result3 !== null) {
                            result4 = parse_a();
                            if (result4 !== null) {
                              result1 = [result1, result2, result3, result4];
                            } else {
                              result1 = null;
                              pos = pos2;
                            }
                          } else {
                            result1 = null;
                            pos = pos2;
                          }
                        } else {
                          result1 = null;
                          pos = pos2;
                        }
                      } else {
                        result1 = null;
                        pos = pos2;
                      }
                      if (result1 === null) {
                        pos2 = pos;
                        result1 = parse_s();
                        if (result1 !== null) {
                          result2 = parse_e();
                          if (result2 !== null) {
                            result3 = parse_h();
                            if (result3 !== null) {
                              result4 = parse_e();
                              if (result4 !== null) {
                                result1 = [result1, result2, result3, result4];
                              } else {
                                result1 = null;
                                pos = pos2;
                              }
                            } else {
                              result1 = null;
                              pos = pos2;
                            }
                          } else {
                            result1 = null;
                            pos = pos2;
                          }
                        } else {
                          result1 = null;
                          pos = pos2;
                        }
                        if (result1 === null) {
                          pos2 = pos;
                          result1 = parse_t();
                          if (result1 !== null) {
                            result2 = parse_o();
                            if (result2 !== null) {
                              result3 = parse_h();
                              if (result3 !== null) {
                                result4 = parse_a();
                                if (result4 !== null) {
                                  result1 = [result1, result2, result3, result4];
                                } else {
                                  result1 = null;
                                  pos = pos2;
                                }
                              } else {
                                result1 = null;
                                pos = pos2;
                              }
                            } else {
                              result1 = null;
                              pos = pos2;
                            }
                          } else {
                            result1 = null;
                            pos = pos2;
                          }
                          if (result1 === null) {
                            pos2 = pos;
                            result1 = parse_g();
                            if (result1 !== null) {
                              result2 = parse_a();
                              if (result2 !== null) {
                                result3 = parse_h();
                                if (result3 !== null) {
                                  result4 = parse_e();
                                  if (result4 !== null) {
                                    result1 = [result1, result2, result3, result4];
                                  } else {
                                    result1 = null;
                                    pos = pos2;
                                  }
                                } else {
                                  result1 = null;
                                  pos = pos2;
                                }
                              } else {
                                result1 = null;
                                pos = pos2;
                              }
                            } else {
                              result1 = null;
                              pos = pos2;
                            }
                            if (result1 === null) {
                              pos2 = pos;
                              result1 = parse_y();
                              if (result1 !== null) {
                                result2 = parse_h();
                                if (result2 !== null) {
                                  result3 = parse_y();
                                  if (result3 !== null) {
                                    result1 = [result1, result2, result3];
                                  } else {
                                    result1 = null;
                                    pos = pos2;
                                  }
                                } else {
                                  result1 = null;
                                  pos = pos2;
                                }
                              } else {
                                result1 = null;
                                pos = pos2;
                              }
                              if (result1 === null) {
                                pos2 = pos;
                                result1 = parse_b();
                                if (result1 !== null) {
                                  result2 = parse_y();
                                  if (result2 !== null) {
                                    result1 = [result1, result2];
                                  } else {
                                    result1 = null;
                                    pos = pos2;
                                  }
                                } else {
                                  result1 = null;
                                  pos = pos2;
                                }
                                if (result1 === null) {
                                  pos2 = pos;
                                  result1 = parse_c();
                                  if (result1 !== null) {
                                    result2 = parse_y();
                                    if (result2 !== null) {
                                      result1 = [result1, result2];
                                    } else {
                                      result1 = null;
                                      pos = pos2;
                                    }
                                  } else {
                                    result1 = null;
                                    pos = pos2;
                                  }
                                  if (result1 === null) {
                                    pos2 = pos;
                                    result1 = parse_d();
                                    if (result1 !== null) {
                                      result2 = parse_y();
                                      if (result2 !== null) {
                                        result1 = [result1, result2];
                                      } else {
                                        result1 = null;
                                        pos = pos2;
                                      }
                                    } else {
                                      result1 = null;
                                      pos = pos2;
                                    }
                                    if (result1 === null) {
                                      pos2 = pos;
                                      result1 = parse_f();
                                      if (result1 !== null) {
                                        result2 = parse_y();
                                        if (result2 !== null) {
                                          result1 = [result1, result2];
                                        } else {
                                          result1 = null;
                                          pos = pos2;
                                        }
                                      } else {
                                        result1 = null;
                                        pos = pos2;
                                      }
                                      if (result1 === null) {
                                        pos2 = pos;
                                        result1 = parse_g();
                                        if (result1 !== null) {
                                          result2 = parse_y();
                                          if (result2 !== null) {
                                            result1 = [result1, result2];
                                          } else {
                                            result1 = null;
                                            pos = pos2;
                                          }
                                        } else {
                                          result1 = null;
                                          pos = pos2;
                                        }
                                        if (result1 === null) {
                                          pos2 = pos;
                                          result1 = parse_j();
                                          if (result1 !== null) {
                                            result2 = parse_y();
                                            if (result2 !== null) {
                                              result1 = [result1, result2];
                                            } else {
                                              result1 = null;
                                              pos = pos2;
                                            }
                                          } else {
                                            result1 = null;
                                            pos = pos2;
                                          }
                                          if (result1 === null) {
                                            pos2 = pos;
                                            result1 = parse_k();
                                            if (result1 !== null) {
                                              result2 = parse_y();
                                              if (result2 !== null) {
                                                result1 = [result1, result2];
                                              } else {
                                                result1 = null;
                                                pos = pos2;
                                              }
                                            } else {
                                              result1 = null;
                                              pos = pos2;
                                            }
                                            if (result1 === null) {
                                              pos2 = pos;
                                              result1 = parse_l();
                                              if (result1 !== null) {
                                                result2 = parse_y();
                                                if (result2 !== null) {
                                                  result1 = [result1, result2];
                                                } else {
                                                  result1 = null;
                                                  pos = pos2;
                                                }
                                              } else {
                                                result1 = null;
                                                pos = pos2;
                                              }
                                              if (result1 === null) {
                                                pos2 = pos;
                                                result1 = parse_m();
                                                if (result1 !== null) {
                                                  result2 = parse_y();
                                                  if (result2 !== null) {
                                                    result1 = [result1, result2];
                                                  } else {
                                                    result1 = null;
                                                    pos = pos2;
                                                  }
                                                } else {
                                                  result1 = null;
                                                  pos = pos2;
                                                }
                                                if (result1 === null) {
                                                  pos2 = pos;
                                                  result1 = parse_n();
                                                  if (result1 !== null) {
                                                    result2 = parse_y();
                                                    if (result2 !== null) {
                                                      result1 = [result1, result2];
                                                    } else {
                                                      result1 = null;
                                                      pos = pos2;
                                                    }
                                                  } else {
                                                    result1 = null;
                                                    pos = pos2;
                                                  }
                                                  if (result1 === null) {
                                                    pos2 = pos;
                                                    result1 = parse_p();
                                                    if (result1 !== null) {
                                                      result2 = parse_y();
                                                      if (result2 !== null) {
                                                        result1 = [result1, result2];
                                                      } else {
                                                        result1 = null;
                                                        pos = pos2;
                                                      }
                                                    } else {
                                                      result1 = null;
                                                      pos = pos2;
                                                    }
                                                    if (result1 === null) {
                                                      pos2 = pos;
                                                      result1 = parse_r();
                                                      if (result1 !== null) {
                                                        result2 = parse_y();
                                                        if (result2 !== null) {
                                                          result1 = [result1, result2];
                                                        } else {
                                                          result1 = null;
                                                          pos = pos2;
                                                        }
                                                      } else {
                                                        result1 = null;
                                                        pos = pos2;
                                                      }
                                                      if (result1 === null) {
                                                        pos2 = pos;
                                                        result1 = parse_s();
                                                        if (result1 !== null) {
                                                          result2 = parse_y();
                                                          if (result2 !== null) {
                                                            result1 = [result1, result2];
                                                          } else {
                                                            result1 = null;
                                                            pos = pos2;
                                                          }
                                                        } else {
                                                          result1 = null;
                                                          pos = pos2;
                                                        }
                                                        if (result1 === null) {
                                                          pos2 = pos;
                                                          result1 = parse_t();
                                                          if (result1 !== null) {
                                                            result2 = parse_y();
                                                            if (result2 !== null) {
                                                              result1 = [result1, result2];
                                                            } else {
                                                              result1 = null;
                                                              pos = pos2;
                                                            }
                                                          } else {
                                                            result1 = null;
                                                            pos = pos2;
                                                          }
                                                          if (result1 === null) {
                                                            pos2 = pos;
                                                            result1 = parse_v();
                                                            if (result1 !== null) {
                                                              result2 = parse_y();
                                                              if (result2 !== null) {
                                                                result1 = [result1, result2];
                                                              } else {
                                                                result1 = null;
                                                                pos = pos2;
                                                              }
                                                            } else {
                                                              result1 = null;
                                                              pos = pos2;
                                                            }
                                                            if (result1 === null) {
                                                              pos2 = pos;
                                                              result1 = parse_x();
                                                              if (result1 !== null) {
                                                                result2 = parse_y();
                                                                if (result2 !== null) {
                                                                  result1 = [result1, result2];
                                                                } else {
                                                                  result1 = null;
                                                                  pos = pos2;
                                                                }
                                                              } else {
                                                                result1 = null;
                                                                pos = pos2;
                                                              }
                                                              if (result1 === null) {
                                                                pos2 = pos;
                                                                result1 = parse_z();
                                                                if (result1 !== null) {
                                                                  result2 = parse_y();
                                                                  if (result2 !== null) {
                                                                    result1 = [result1, result2];
                                                                  } else {
                                                                    result1 = null;
                                                                    pos = pos2;
                                                                  }
                                                                } else {
                                                                  result1 = null;
                                                                  pos = pos2;
                                                                }
                                                                if (result1 === null) {
                                                                  pos2 = pos;
                                                                  result1 = parse_u();
                                                                  if (result1 !== null) {
                                                                    result2 = parse_y();
                                                                    if (result2 !== null) {
                                                                      result1 = [result1, result2];
                                                                    } else {
                                                                      result1 = null;
                                                                      pos = pos2;
                                                                    }
                                                                  } else {
                                                                    result1 = null;
                                                                    pos = pos2;
                                                                  }
                                                                  if (result1 === null) {
                                                                    pos2 = pos;
                                                                    result1 = parse_i();
                                                                    if (result1 !== null) {
                                                                      result2 = parse_y();
                                                                      if (result2 !== null) {
                                                                        result1 = [result1, result2];
                                                                      } else {
                                                                        result1 = null;
                                                                        pos = pos2;
                                                                      }
                                                                    } else {
                                                                      result1 = null;
                                                                      pos = pos2;
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("BY", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LEhU() {
        var cacheKey = "LEhU@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_l();
          if (result1 !== null) {
            result2 = parse_e();
            if (result2 !== null) {
              result3 = parse_h();
              if (result3 !== null) {
                result4 = parse_u();
                if (result4 !== null) {
                  result1 = [result1, result2, result3, result4];
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("LEhU", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LOhU() {
        var cacheKey = "LOhU@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_l();
          if (result1 !== null) {
            result2 = parse_o();
            if (result2 !== null) {
              result3 = parse_h();
              if (result3 !== null) {
                result4 = parse_u();
                if (result4 !== null) {
                  result1 = [result1, result2, result3, result4];
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("LOhU", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SA() {
        var cacheKey = "SA@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_s();
          if (result1 !== null) {
            result2 = parse_a();
            if (result2 !== null) {
              result1 = [result1, result2];
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("SA", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SI() {
        var cacheKey = "SI@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_s();
          if (result1 !== null) {
            result2 = parse_i();
            if (result2 !== null) {
              result1 = [result1, result2];
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("SI", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_SU() {
        var cacheKey = "SU@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_s();
          if (result1 !== null) {
            result2 = parse_u();
            if (result2 !== null) {
              result1 = [result1, result2];
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("SU", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_UI() {
        var cacheKey = "UI@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_k();
          if (result1 !== null) {
            result2 = parse_o();
            if (result2 !== null) {
              result3 = parse_h();
              if (result3 !== null) {
                result4 = parse_o();
                if (result4 !== null) {
                  result5 = parse_i();
                  if (result5 !== null) {
                    result1 = [result1, result2, result3, result4, result5];
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 === null) {
            pos2 = pos;
            result1 = parse_s();
            if (result1 !== null) {
              result2 = parse_i();
              if (result2 !== null) {
                result3 = parse_h();
                if (result3 !== null) {
                  result4 = parse_a();
                  if (result4 !== null) {
                    result5 = parse_u();
                    if (result5 !== null) {
                      result1 = [result1, result2, result3, result4, result5];
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
            if (result1 === null) {
              pos2 = pos;
              result1 = parse_o();
              if (result1 !== null) {
                result2 = parse_h();
                if (result2 !== null) {
                  result3 = parse_a();
                  if (result3 !== null) {
                    result4 = parse_i();
                    if (result4 !== null) {
                      result1 = [result1, result2, result3, result4];
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
              if (result1 === null) {
                pos2 = pos;
                result1 = parse_x();
                if (result1 !== null) {
                  result2 = parse_e();
                  if (result2 !== null) {
                    result3 = parse_h();
                    if (result3 !== null) {
                      result4 = parse_e();
                      if (result4 !== null) {
                        result1 = [result1, result2, result3, result4];
                      } else {
                        result1 = null;
                        pos = pos2;
                      }
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
                if (result1 === null) {
                  pos2 = pos;
                  result1 = parse_x();
                  if (result1 !== null) {
                    result2 = parse_o();
                    if (result2 !== null) {
                      result3 = parse_h();
                      if (result3 !== null) {
                        result4 = parse_o();
                        if (result4 !== null) {
                          result1 = [result1, result2, result3, result4];
                        } else {
                          result1 = null;
                          pos = pos2;
                        }
                      } else {
                        result1 = null;
                        pos = pos2;
                      }
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                  if (result1 === null) {
                    pos2 = pos;
                    result1 = parse_i();
                    if (result1 !== null) {
                      result2 = parse_h();
                      if (result2 !== null) {
                        result3 = parse_a();
                        if (result3 !== null) {
                          result1 = [result1, result2, result3];
                        } else {
                          result1 = null;
                          pos = pos2;
                        }
                      } else {
                        result1 = null;
                        pos = pos2;
                      }
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                    if (result1 === null) {
                      pos2 = pos;
                      result1 = parse_i();
                      if (result1 !== null) {
                        result2 = parse_e();
                        if (result2 !== null) {
                          result1 = [result1, result2];
                        } else {
                          result1 = null;
                          pos = pos2;
                        }
                      } else {
                        result1 = null;
                        pos = pos2;
                      }
                      if (result1 === null) {
                        pos2 = pos;
                        result1 = parse_a();
                        if (result1 !== null) {
                          result2 = parse_h();
                          if (result2 !== null) {
                            result3 = parse_e();
                            if (result3 !== null) {
                              result1 = [result1, result2, result3];
                            } else {
                              result1 = null;
                              pos = pos2;
                            }
                          } else {
                            result1 = null;
                            pos = pos2;
                          }
                        } else {
                          result1 = null;
                          pos = pos2;
                        }
                        if (result1 === null) {
                          pos2 = pos;
                          result1 = parse_u();
                          if (result1 !== null) {
                            result2 = parse_h();
                            if (result2 !== null) {
                              result3 = parse_i();
                              if (result3 !== null) {
                                result1 = [result1, result2, result3];
                              } else {
                                result1 = null;
                                pos = pos2;
                              }
                            } else {
                              result1 = null;
                              pos = pos2;
                            }
                          } else {
                            result1 = null;
                            pos = pos2;
                          }
                          if (result1 === null) {
                            pos2 = pos;
                            result1 = parse_i();
                            if (result1 !== null) {
                              result2 = parse_h();
                              if (result2 !== null) {
                                result3 = parse_o();
                                if (result3 !== null) {
                                  result1 = [result1, result2, result3];
                                } else {
                                  result1 = null;
                                  pos = pos2;
                                }
                              } else {
                                result1 = null;
                                pos = pos2;
                              }
                            } else {
                              result1 = null;
                              pos = pos2;
                            }
                            if (result1 === null) {
                              pos2 = pos;
                              result1 = parse_i();
                              if (result1 !== null) {
                                result2 = parse_h();
                                if (result2 !== null) {
                                  result3 = parse_e();
                                  if (result3 !== null) {
                                    result1 = [result1, result2, result3];
                                  } else {
                                    result1 = null;
                                    pos = pos2;
                                  }
                                } else {
                                  result1 = null;
                                  pos = pos2;
                                }
                              } else {
                                result1 = null;
                                pos = pos2;
                              }
                              if (result1 === null) {
                                pos2 = pos;
                                result1 = parse_a();
                                if (result1 !== null) {
                                  result2 = parse_h();
                                  if (result2 !== null) {
                                    result3 = parse_a();
                                    if (result3 !== null) {
                                      result1 = [result1, result2, result3];
                                    } else {
                                      result1 = null;
                                      pos = pos2;
                                    }
                                  } else {
                                    result1 = null;
                                    pos = pos2;
                                  }
                                } else {
                                  result1 = null;
                                  pos = pos2;
                                }
                                if (result1 === null) {
                                  pos2 = pos;
                                  result1 = parse_i();
                                  if (result1 !== null) {
                                    result2 = parse_a();
                                    if (result2 !== null) {
                                      result1 = [result1, result2];
                                    } else {
                                      result1 = null;
                                      pos = pos2;
                                    }
                                  } else {
                                    result1 = null;
                                    pos = pos2;
                                  }
                                  if (result1 === null) {
                                    pos2 = pos;
                                    result1 = parse_o();
                                    if (result1 !== null) {
                                      result2 = parse_h();
                                      if (result2 !== null) {
                                        result3 = parse_i();
                                        if (result3 !== null) {
                                          result1 = [result1, result2, result3];
                                        } else {
                                          result1 = null;
                                          pos = pos2;
                                        }
                                      } else {
                                        result1 = null;
                                        pos = pos2;
                                      }
                                    } else {
                                      result1 = null;
                                      pos = pos2;
                                    }
                                    if (result1 === null) {
                                      pos2 = pos;
                                      result1 = parse_o();
                                      if (result1 !== null) {
                                        result2 = parse_h();
                                        if (result2 !== null) {
                                          result3 = parse_e();
                                          if (result3 !== null) {
                                            result1 = [result1, result2, result3];
                                          } else {
                                            result1 = null;
                                            pos = pos2;
                                          }
                                        } else {
                                          result1 = null;
                                          pos = pos2;
                                        }
                                      } else {
                                        result1 = null;
                                        pos = pos2;
                                      }
                                      if (result1 === null) {
                                        pos2 = pos;
                                        result1 = parse_e();
                                        if (result1 !== null) {
                                          result2 = parse_h();
                                          if (result2 !== null) {
                                            result3 = parse_e();
                                            if (result3 !== null) {
                                              result1 = [result1, result2, result3];
                                            } else {
                                              result1 = null;
                                              pos = pos2;
                                            }
                                          } else {
                                            result1 = null;
                                            pos = pos2;
                                          }
                                        } else {
                                          result1 = null;
                                          pos = pos2;
                                        }
                                        if (result1 === null) {
                                          pos2 = pos;
                                          result1 = parse_o();
                                          if (result1 !== null) {
                                            result2 = parse_i();
                                            if (result2 !== null) {
                                              result1 = [result1, result2];
                                            } else {
                                              result1 = null;
                                              pos = pos2;
                                            }
                                          } else {
                                            result1 = null;
                                            pos = pos2;
                                          }
                                          if (result1 === null) {
                                            pos2 = pos;
                                            result1 = parse_u();
                                            if (result1 !== null) {
                                              result2 = parse_o();
                                              if (result2 !== null) {
                                                result1 = [result1, result2];
                                              } else {
                                                result1 = null;
                                                pos = pos2;
                                              }
                                            } else {
                                              result1 = null;
                                              pos = pos2;
                                            }
                                            if (result1 === null) {
                                              pos2 = pos;
                                              result1 = parse_e();
                                              if (result1 !== null) {
                                                result2 = parse_h();
                                                if (result2 !== null) {
                                                  result3 = parse_i();
                                                  if (result3 !== null) {
                                                    result1 = [result1, result2, result3];
                                                  } else {
                                                    result1 = null;
                                                    pos = pos2;
                                                  }
                                                } else {
                                                  result1 = null;
                                                  pos = pos2;
                                                }
                                              } else {
                                                result1 = null;
                                                pos = pos2;
                                              }
                                              if (result1 === null) {
                                                pos2 = pos;
                                                result1 = parse_u();
                                                if (result1 !== null) {
                                                  result2 = parse_h();
                                                  if (result2 !== null) {
                                                    result3 = parse_o();
                                                    if (result3 !== null) {
                                                      result1 = [result1, result2, result3];
                                                    } else {
                                                      result1 = null;
                                                      pos = pos2;
                                                    }
                                                  } else {
                                                    result1 = null;
                                                    pos = pos2;
                                                  }
                                                } else {
                                                  result1 = null;
                                                  pos = pos2;
                                                }
                                                if (result1 === null) {
                                                  pos2 = pos;
                                                  result1 = parse_a();
                                                  if (result1 !== null) {
                                                    result2 = parse_u();
                                                    if (result2 !== null) {
                                                      result1 = [result1, result2];
                                                    } else {
                                                      result1 = null;
                                                      pos = pos2;
                                                    }
                                                  } else {
                                                    result1 = null;
                                                    pos = pos2;
                                                  }
                                                  if (result1 === null) {
                                                    pos2 = pos;
                                                    result1 = parse_u();
                                                    if (result1 !== null) {
                                                      result2 = parse_a();
                                                      if (result2 !== null) {
                                                        result1 = [result1, result2];
                                                      } else {
                                                        result1 = null;
                                                        pos = pos2;
                                                      }
                                                    } else {
                                                      result1 = null;
                                                      pos = pos2;
                                                    }
                                                    if (result1 === null) {
                                                      pos2 = pos;
                                                      result1 = parse_a();
                                                      if (result1 !== null) {
                                                        result2 = parse_h();
                                                        if (result2 !== null) {
                                                          result3 = parse_i();
                                                          if (result3 !== null) {
                                                            result1 = [result1, result2, result3];
                                                          } else {
                                                            result1 = null;
                                                            pos = pos2;
                                                          }
                                                        } else {
                                                          result1 = null;
                                                          pos = pos2;
                                                        }
                                                      } else {
                                                        result1 = null;
                                                        pos = pos2;
                                                      }
                                                      if (result1 === null) {
                                                        pos2 = pos;
                                                        result1 = parse_i();
                                                        if (result1 !== null) {
                                                          result2 = parse_h();
                                                          if (result2 !== null) {
                                                            result3 = parse_u();
                                                            if (result3 !== null) {
                                                              result1 = [result1, result2, result3];
                                                            } else {
                                                              result1 = null;
                                                              pos = pos2;
                                                            }
                                                          } else {
                                                            result1 = null;
                                                            pos = pos2;
                                                          }
                                                        } else {
                                                          result1 = null;
                                                          pos = pos2;
                                                        }
                                                        if (result1 === null) {
                                                          pos2 = pos;
                                                          result1 = parse_i();
                                                          if (result1 !== null) {
                                                            result2 = parse_i();
                                                            if (result2 !== null) {
                                                              result1 = [result1, result2];
                                                            } else {
                                                              result1 = null;
                                                              pos = pos2;
                                                            }
                                                          } else {
                                                            result1 = null;
                                                            pos = pos2;
                                                          }
                                                          if (result1 === null) {
                                                            pos2 = pos;
                                                            result1 = parse_u();
                                                            if (result1 !== null) {
                                                              result2 = parse_h();
                                                              if (result2 !== null) {
                                                                result3 = parse_a();
                                                                if (result3 !== null) {
                                                                  result1 = [result1, result2, result3];
                                                                } else {
                                                                  result1 = null;
                                                                  pos = pos2;
                                                                }
                                                              } else {
                                                                result1 = null;
                                                                pos = pos2;
                                                              }
                                                            } else {
                                                              result1 = null;
                                                              pos = pos2;
                                                            }
                                                            if (result1 === null) {
                                                              pos2 = pos;
                                                              result1 = parse_u();
                                                              if (result1 !== null) {
                                                                result2 = parse_i();
                                                                if (result2 !== null) {
                                                                  result1 = [result1, result2];
                                                                } else {
                                                                  result1 = null;
                                                                  pos = pos2;
                                                                }
                                                              } else {
                                                                result1 = null;
                                                                pos = pos2;
                                                              }
                                                              if (result1 === null) {
                                                                pos2 = pos;
                                                                result1 = parse_a();
                                                                if (result1 !== null) {
                                                                  result2 = parse_h();
                                                                  if (result2 !== null) {
                                                                    result3 = parse_o();
                                                                    if (result3 !== null) {
                                                                      result1 = [result1, result2, result3];
                                                                    } else {
                                                                      result1 = null;
                                                                      pos = pos2;
                                                                    }
                                                                  } else {
                                                                    result1 = null;
                                                                    pos = pos2;
                                                                  }
                                                                } else {
                                                                  result1 = null;
                                                                  pos = pos2;
                                                                }
                                                                if (result1 === null) {
                                                                  pos2 = pos;
                                                                  result1 = parse_a();
                                                                  if (result1 !== null) {
                                                                    result2 = parse_i();
                                                                    if (result2 !== null) {
                                                                      result1 = [result1, result2];
                                                                    } else {
                                                                      result1 = null;
                                                                      pos = pos2;
                                                                    }
                                                                  } else {
                                                                    result1 = null;
                                                                    pos = pos2;
                                                                  }
                                                                  if (result1 === null) {
                                                                    pos2 = pos;
                                                                    result1 = parse_a();
                                                                    if (result1 !== null) {
                                                                      result2 = parse_h();
                                                                      if (result2 !== null) {
                                                                        result3 = parse_u();
                                                                        if (result3 !== null) {
                                                                          result1 = [result1, result2, result3];
                                                                        } else {
                                                                          result1 = null;
                                                                          pos = pos2;
                                                                        }
                                                                      } else {
                                                                        result1 = null;
                                                                        pos = pos2;
                                                                      }
                                                                    } else {
                                                                      result1 = null;
                                                                      pos = pos2;
                                                                    }
                                                                    if (result1 === null) {
                                                                      pos2 = pos;
                                                                      result1 = parse_i();
                                                                      if (result1 !== null) {
                                                                        result2 = parse_u();
                                                                        if (result2 !== null) {
                                                                          result1 = [result1, result2];
                                                                        } else {
                                                                          result1 = null;
                                                                          pos = pos2;
                                                                        }
                                                                      } else {
                                                                        result1 = null;
                                                                        pos = pos2;
                                                                      }
                                                                      if (result1 === null) {
                                                                        pos2 = pos;
                                                                        result1 = parse_e();
                                                                        if (result1 !== null) {
                                                                          result2 = parse_i();
                                                                          if (result2 !== null) {
                                                                            result1 = [result1, result2];
                                                                          } else {
                                                                            result1 = null;
                                                                            pos = pos2;
                                                                          }
                                                                        } else {
                                                                          result1 = null;
                                                                          pos = pos2;
                                                                        }
                                                                        if (result1 === null) {
                                                                          pos2 = pos;
                                                                          result1 = parse_o();
                                                                          if (result1 !== null) {
                                                                            result2 = parse_h();
                                                                            if (result2 !== null) {
                                                                              result3 = parse_o();
                                                                              if (result3 !== null) {
                                                                                result1 = [result1, result2, result3];
                                                                              } else {
                                                                                result1 = null;
                                                                                pos = pos2;
                                                                              }
                                                                            } else {
                                                                              result1 = null;
                                                                              pos = pos2;
                                                                            }
                                                                          } else {
                                                                            result1 = null;
                                                                            pos = pos2;
                                                                          }
                                                                          if (result1 === null) {
                                                                            pos2 = pos;
                                                                            result1 = parse_e();
                                                                            if (result1 !== null) {
                                                                              result2 = parse_h();
                                                                              if (result2 !== null) {
                                                                                result3 = parse_a();
                                                                                if (result3 !== null) {
                                                                                  result1 = [result1, result2, result3];
                                                                                } else {
                                                                                  result1 = null;
                                                                                  pos = pos2;
                                                                                }
                                                                              } else {
                                                                                result1 = null;
                                                                                pos = pos2;
                                                                              }
                                                                            } else {
                                                                              result1 = null;
                                                                              pos = pos2;
                                                                            }
                                                                            if (result1 === null) {
                                                                              pos2 = pos;
                                                                              result1 = parse_u();
                                                                              if (result1 !== null) {
                                                                                result2 = parse_u();
                                                                                if (result2 !== null) {
                                                                                  result1 = [result1, result2];
                                                                                } else {
                                                                                  result1 = null;
                                                                                  pos = pos2;
                                                                                }
                                                                              } else {
                                                                                result1 = null;
                                                                                pos = pos2;
                                                                              }
                                                                              if (result1 === null) {
                                                                                pos2 = pos;
                                                                                result1 = parse_o();
                                                                                if (result1 !== null) {
                                                                                  result2 = parse_h();
                                                                                  if (result2 !== null) {
                                                                                    result3 = parse_a();
                                                                                    if (result3 !== null) {
                                                                                      result1 = [result1, result2, result3];
                                                                                    } else {
                                                                                      result1 = null;
                                                                                      pos = pos2;
                                                                                    }
                                                                                  } else {
                                                                                    result1 = null;
                                                                                    pos = pos2;
                                                                                  }
                                                                                } else {
                                                                                  result1 = null;
                                                                                  pos = pos2;
                                                                                }
                                                                                if (result1 === null) {
                                                                                  pos2 = pos;
                                                                                  result1 = parse_o();
                                                                                  if (result1 !== null) {
                                                                                    result2 = parse_h();
                                                                                    if (result2 !== null) {
                                                                                      result3 = parse_u();
                                                                                      if (result3 !== null) {
                                                                                        result1 = [result1, result2, result3];
                                                                                      } else {
                                                                                        result1 = null;
                                                                                        pos = pos2;
                                                                                      }
                                                                                    } else {
                                                                                      result1 = null;
                                                                                      pos = pos2;
                                                                                    }
                                                                                  } else {
                                                                                    result1 = null;
                                                                                    pos = pos2;
                                                                                  }
                                                                                  if (result1 === null) {
                                                                                    pos2 = pos;
                                                                                    result1 = parse_u();
                                                                                    if (result1 !== null) {
                                                                                      result2 = parse_h();
                                                                                      if (result2 !== null) {
                                                                                        result3 = parse_u();
                                                                                        if (result3 !== null) {
                                                                                          result1 = [result1, result2, result3];
                                                                                        } else {
                                                                                          result1 = null;
                                                                                          pos = pos2;
                                                                                        }
                                                                                      } else {
                                                                                        result1 = null;
                                                                                        pos = pos2;
                                                                                      }
                                                                                    } else {
                                                                                      result1 = null;
                                                                                      pos = pos2;
                                                                                    }
                                                                                    if (result1 === null) {
                                                                                      pos2 = pos;
                                                                                      result1 = parse_e();
                                                                                      if (result1 !== null) {
                                                                                        result2 = parse_h();
                                                                                        if (result2 !== null) {
                                                                                          result3 = parse_o();
                                                                                          if (result3 !== null) {
                                                                                            result1 = [result1, result2, result3];
                                                                                          } else {
                                                                                            result1 = null;
                                                                                            pos = pos2;
                                                                                          }
                                                                                        } else {
                                                                                          result1 = null;
                                                                                          pos = pos2;
                                                                                        }
                                                                                      } else {
                                                                                        result1 = null;
                                                                                        pos = pos2;
                                                                                      }
                                                                                      if (result1 === null) {
                                                                                        pos2 = pos;
                                                                                        result1 = parse_i();
                                                                                        if (result1 !== null) {
                                                                                          result2 = parse_o();
                                                                                          if (result2 !== null) {
                                                                                            result1 = [result1, result2];
                                                                                          } else {
                                                                                            result1 = null;
                                                                                            pos = pos2;
                                                                                          }
                                                                                        } else {
                                                                                          result1 = null;
                                                                                          pos = pos2;
                                                                                        }
                                                                                        if (result1 === null) {
                                                                                          pos2 = pos;
                                                                                          result1 = parse_e();
                                                                                          if (result1 !== null) {
                                                                                            result2 = parse_h();
                                                                                            if (result2 !== null) {
                                                                                              result3 = parse_u();
                                                                                              if (result3 !== null) {
                                                                                                result1 = [result1, result2, result3];
                                                                                              } else {
                                                                                                result1 = null;
                                                                                                pos = pos2;
                                                                                              }
                                                                                            } else {
                                                                                              result1 = null;
                                                                                              pos = pos2;
                                                                                            }
                                                                                          } else {
                                                                                            result1 = null;
                                                                                            pos = pos2;
                                                                                          }
                                                                                          if (result1 === null) {
                                                                                            pos2 = pos;
                                                                                            result1 = parse_u();
                                                                                            if (result1 !== null) {
                                                                                              result2 = parse_e();
                                                                                              if (result2 !== null) {
                                                                                                result1 = [result1, result2];
                                                                                              } else {
                                                                                                result1 = null;
                                                                                                pos = pos2;
                                                                                              }
                                                                                            } else {
                                                                                              result1 = null;
                                                                                              pos = pos2;
                                                                                            }
                                                                                            if (result1 === null) {
                                                                                              pos2 = pos;
                                                                                              result1 = parse_i();
                                                                                              if (result1 !== null) {
                                                                                                result2 = parse_h();
                                                                                                if (result2 !== null) {
                                                                                                  result3 = parse_i();
                                                                                                  if (result3 !== null) {
                                                                                                    result1 = [result1, result2, result3];
                                                                                                  } else {
                                                                                                    result1 = null;
                                                                                                    pos = pos2;
                                                                                                  }
                                                                                                } else {
                                                                                                  result1 = null;
                                                                                                  pos = pos2;
                                                                                                }
                                                                                              } else {
                                                                                                result1 = null;
                                                                                                pos = pos2;
                                                                                              }
                                                                                              if (result1 === null) {
                                                                                                pos2 = pos;
                                                                                                result1 = parse_u();
                                                                                                if (result1 !== null) {
                                                                                                  result2 = parse_h();
                                                                                                  if (result2 !== null) {
                                                                                                    result3 = parse_e();
                                                                                                    if (result3 !== null) {
                                                                                                      result1 = [result1, result2, result3];
                                                                                                    } else {
                                                                                                      result1 = null;
                                                                                                      pos = pos2;
                                                                                                    }
                                                                                                  } else {
                                                                                                    result1 = null;
                                                                                                    pos = pos2;
                                                                                                  }
                                                                                                } else {
                                                                                                  result1 = null;
                                                                                                  pos = pos2;
                                                                                                }
                                                                                                if (result1 === null) {
                                                                                                  pos2 = pos;
                                                                                                  result1 = parse_b();
                                                                                                  if (result1 !== null) {
                                                                                                    result2 = parse_a();
                                                                                                    if (result2 !== null) {
                                                                                                      result3 = parse_h();
                                                                                                      if (result3 !== null) {
                                                                                                        result4 = parse_a();
                                                                                                        if (result4 !== null) {
                                                                                                          result1 = [result1, result2, result3, result4];
                                                                                                        } else {
                                                                                                          result1 = null;
                                                                                                          pos = pos2;
                                                                                                        }
                                                                                                      } else {
                                                                                                        result1 = null;
                                                                                                        pos = pos2;
                                                                                                      }
                                                                                                    } else {
                                                                                                      result1 = null;
                                                                                                      pos = pos2;
                                                                                                    }
                                                                                                  } else {
                                                                                                    result1 = null;
                                                                                                    pos = pos2;
                                                                                                  }
                                                                                                  if (result1 === null) {
                                                                                                    pos2 = pos;
                                                                                                    result1 = parse_j();
                                                                                                    if (result1 !== null) {
                                                                                                      result2 = parse_a();
                                                                                                      if (result2 !== null) {
                                                                                                        result3 = parse_h();
                                                                                                        if (result3 !== null) {
                                                                                                          result4 = parse_o();
                                                                                                          if (result4 !== null) {
                                                                                                            result1 = [result1, result2, result3, result4];
                                                                                                          } else {
                                                                                                            result1 = null;
                                                                                                            pos = pos2;
                                                                                                          }
                                                                                                        } else {
                                                                                                          result1 = null;
                                                                                                          pos = pos2;
                                                                                                        }
                                                                                                      } else {
                                                                                                        result1 = null;
                                                                                                        pos = pos2;
                                                                                                      }
                                                                                                    } else {
                                                                                                      result1 = null;
                                                                                                      pos = pos2;
                                                                                                    }
                                                                                                    if (result1 === null) {
                                                                                                      pos2 = pos;
                                                                                                      result1 = parse_c();
                                                                                                      if (result1 !== null) {
                                                                                                        result2 = parse_a();
                                                                                                        if (result2 !== null) {
                                                                                                          result3 = parse_h();
                                                                                                          if (result3 !== null) {
                                                                                                            result4 = parse_e();
                                                                                                            if (result4 !== null) {
                                                                                                              result1 = [result1, result2, result3, result4];
                                                                                                            } else {
                                                                                                              result1 = null;
                                                                                                              pos = pos2;
                                                                                                            }
                                                                                                          } else {
                                                                                                            result1 = null;
                                                                                                            pos = pos2;
                                                                                                          }
                                                                                                        } else {
                                                                                                          result1 = null;
                                                                                                          pos = pos2;
                                                                                                        }
                                                                                                      } else {
                                                                                                        result1 = null;
                                                                                                        pos = pos2;
                                                                                                      }
                                                                                                      if (result1 === null) {
                                                                                                        pos2 = pos;
                                                                                                        result1 = parse_s();
                                                                                                        if (result1 !== null) {
                                                                                                          result2 = parse_u();
                                                                                                          if (result2 !== null) {
                                                                                                            result3 = parse_h();
                                                                                                            if (result3 !== null) {
                                                                                                              result4 = parse_a();
                                                                                                              if (result4 !== null) {
                                                                                                                result1 = [result1, result2, result3, result4];
                                                                                                              } else {
                                                                                                                result1 = null;
                                                                                                                pos = pos2;
                                                                                                              }
                                                                                                            } else {
                                                                                                              result1 = null;
                                                                                                              pos = pos2;
                                                                                                            }
                                                                                                          } else {
                                                                                                            result1 = null;
                                                                                                            pos = pos2;
                                                                                                          }
                                                                                                        } else {
                                                                                                          result1 = null;
                                                                                                          pos = pos2;
                                                                                                        }
                                                                                                        if (result1 === null) {
                                                                                                          pos2 = pos;
                                                                                                          result1 = parse_t();
                                                                                                          if (result1 !== null) {
                                                                                                            result2 = parse_i();
                                                                                                            if (result2 !== null) {
                                                                                                              result3 = parse_h();
                                                                                                              if (result3 !== null) {
                                                                                                                result4 = parse_e();
                                                                                                                if (result4 !== null) {
                                                                                                                  result1 = [result1, result2, result3, result4];
                                                                                                                } else {
                                                                                                                  result1 = null;
                                                                                                                  pos = pos2;
                                                                                                                }
                                                                                                              } else {
                                                                                                                result1 = null;
                                                                                                                pos = pos2;
                                                                                                              }
                                                                                                            } else {
                                                                                                              result1 = null;
                                                                                                              pos = pos2;
                                                                                                            }
                                                                                                          } else {
                                                                                                            result1 = null;
                                                                                                            pos = pos2;
                                                                                                          }
                                                                                                          if (result1 === null) {
                                                                                                            pos2 = pos;
                                                                                                            result1 = parse_k();
                                                                                                            if (result1 !== null) {
                                                                                                              result2 = parse_a();
                                                                                                              if (result2 !== null) {
                                                                                                                result3 = parse_h();
                                                                                                                if (result3 !== null) {
                                                                                                                  result4 = parse_u();
                                                                                                                  if (result4 !== null) {
                                                                                                                    result1 = [result1, result2, result3, result4];
                                                                                                                  } else {
                                                                                                                    result1 = null;
                                                                                                                    pos = pos2;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  result1 = null;
                                                                                                                  pos = pos2;
                                                                                                                }
                                                                                                              } else {
                                                                                                                result1 = null;
                                                                                                                pos = pos2;
                                                                                                              }
                                                                                                            } else {
                                                                                                              result1 = null;
                                                                                                              pos = pos2;
                                                                                                            }
                                                                                                            if (result1 === null) {
                                                                                                              pos2 = pos;
                                                                                                              result1 = parse_s();
                                                                                                              if (result1 !== null) {
                                                                                                                result2 = parse_e();
                                                                                                                if (result2 !== null) {
                                                                                                                  result3 = parse_h();
                                                                                                                  if (result3 !== null) {
                                                                                                                    result4 = parse_o();
                                                                                                                    if (result4 !== null) {
                                                                                                                      result1 = [result1, result2, result3, result4];
                                                                                                                    } else {
                                                                                                                      result1 = null;
                                                                                                                      pos = pos2;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    result1 = null;
                                                                                                                    pos = pos2;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  result1 = null;
                                                                                                                  pos = pos2;
                                                                                                                }
                                                                                                              } else {
                                                                                                                result1 = null;
                                                                                                                pos = pos2;
                                                                                                              }
                                                                                                              if (result1 === null) {
                                                                                                                pos2 = pos;
                                                                                                                result1 = parse_z();
                                                                                                                if (result1 !== null) {
                                                                                                                  result2 = parse_a();
                                                                                                                  if (result2 !== null) {
                                                                                                                    result3 = parse_h();
                                                                                                                    if (result3 !== null) {
                                                                                                                      result4 = parse_a();
                                                                                                                      if (result4 !== null) {
                                                                                                                        result1 = [result1, result2, result3, result4];
                                                                                                                      } else {
                                                                                                                        result1 = null;
                                                                                                                        pos = pos2;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      result1 = null;
                                                                                                                      pos = pos2;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    result1 = null;
                                                                                                                    pos = pos2;
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  result1 = null;
                                                                                                                  pos = pos2;
                                                                                                                }
                                                                                                                if (result1 === null) {
                                                                                                                  pos2 = pos;
                                                                                                                  result1 = parse_p();
                                                                                                                  if (result1 !== null) {
                                                                                                                    result2 = parse_e();
                                                                                                                    if (result2 !== null) {
                                                                                                                      result3 = parse_h();
                                                                                                                      if (result3 !== null) {
                                                                                                                        result4 = parse_i();
                                                                                                                        if (result4 !== null) {
                                                                                                                          result1 = [result1, result2, result3, result4];
                                                                                                                        } else {
                                                                                                                          result1 = null;
                                                                                                                          pos = pos2;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        result1 = null;
                                                                                                                        pos = pos2;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      result1 = null;
                                                                                                                      pos = pos2;
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    result1 = null;
                                                                                                                    pos = pos2;
                                                                                                                  }
                                                                                                                  if (result1 === null) {
                                                                                                                    pos2 = pos;
                                                                                                                    result1 = parse_r();
                                                                                                                    if (result1 !== null) {
                                                                                                                      result2 = parse_u();
                                                                                                                      if (result2 !== null) {
                                                                                                                        result3 = parse_h();
                                                                                                                        if (result3 !== null) {
                                                                                                                          result4 = parse_a();
                                                                                                                          if (result4 !== null) {
                                                                                                                            result1 = [result1, result2, result3, result4];
                                                                                                                          } else {
                                                                                                                            result1 = null;
                                                                                                                            pos = pos2;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          result1 = null;
                                                                                                                          pos = pos2;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        result1 = null;
                                                                                                                        pos = pos2;
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      result1 = null;
                                                                                                                      pos = pos2;
                                                                                                                    }
                                                                                                                    if (result1 === null) {
                                                                                                                      pos2 = pos;
                                                                                                                      result1 = parse_j();
                                                                                                                      if (result1 !== null) {
                                                                                                                        result2 = parse_u();
                                                                                                                        if (result2 !== null) {
                                                                                                                          result3 = parse_h();
                                                                                                                          if (result3 !== null) {
                                                                                                                            result4 = parse_a();
                                                                                                                            if (result4 !== null) {
                                                                                                                              result1 = [result1, result2, result3, result4];
                                                                                                                            } else {
                                                                                                                              result1 = null;
                                                                                                                              pos = pos2;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            result1 = null;
                                                                                                                            pos = pos2;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          result1 = null;
                                                                                                                          pos = pos2;
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        result1 = null;
                                                                                                                        pos = pos2;
                                                                                                                      }
                                                                                                                      if (result1 === null) {
                                                                                                                        pos2 = pos;
                                                                                                                        result1 = parse_t();
                                                                                                                        if (result1 !== null) {
                                                                                                                          result2 = parse_a();
                                                                                                                          if (result2 !== null) {
                                                                                                                            result3 = parse_h();
                                                                                                                            if (result3 !== null) {
                                                                                                                              result4 = parse_o();
                                                                                                                              if (result4 !== null) {
                                                                                                                                result1 = [result1, result2, result3, result4];
                                                                                                                              } else {
                                                                                                                                result1 = null;
                                                                                                                                pos = pos2;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              result1 = null;
                                                                                                                              pos = pos2;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            result1 = null;
                                                                                                                            pos = pos2;
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          result1 = null;
                                                                                                                          pos = pos2;
                                                                                                                        }
                                                                                                                        if (result1 === null) {
                                                                                                                          pos2 = pos;
                                                                                                                          result1 = parse_r();
                                                                                                                          if (result1 !== null) {
                                                                                                                            result2 = parse_a();
                                                                                                                            if (result2 !== null) {
                                                                                                                              result3 = parse_h();
                                                                                                                              if (result3 !== null) {
                                                                                                                                result4 = parse_u();
                                                                                                                                if (result4 !== null) {
                                                                                                                                  result1 = [result1, result2, result3, result4];
                                                                                                                                } else {
                                                                                                                                  result1 = null;
                                                                                                                                  pos = pos2;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                result1 = null;
                                                                                                                                pos = pos2;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              result1 = null;
                                                                                                                              pos = pos2;
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            result1 = null;
                                                                                                                            pos = pos2;
                                                                                                                          }
                                                                                                                          if (result1 === null) {
                                                                                                                            pos2 = pos;
                                                                                                                            result1 = parse_l();
                                                                                                                            if (result1 !== null) {
                                                                                                                              result2 = parse_i();
                                                                                                                              if (result2 !== null) {
                                                                                                                                result3 = parse_h();
                                                                                                                                if (result3 !== null) {
                                                                                                                                  result4 = parse_a();
                                                                                                                                  if (result4 !== null) {
                                                                                                                                    result1 = [result1, result2, result3, result4];
                                                                                                                                  } else {
                                                                                                                                    result1 = null;
                                                                                                                                    pos = pos2;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  result1 = null;
                                                                                                                                  pos = pos2;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                result1 = null;
                                                                                                                                pos = pos2;
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              result1 = null;
                                                                                                                              pos = pos2;
                                                                                                                            }
                                                                                                                            if (result1 === null) {
                                                                                                                              pos2 = pos;
                                                                                                                              result1 = parse_b();
                                                                                                                              if (result1 !== null) {
                                                                                                                                result2 = parse_a();
                                                                                                                                if (result2 !== null) {
                                                                                                                                  result3 = parse_h();
                                                                                                                                  if (result3 !== null) {
                                                                                                                                    result4 = parse_u();
                                                                                                                                    if (result4 !== null) {
                                                                                                                                      result1 = [result1, result2, result3, result4];
                                                                                                                                    } else {
                                                                                                                                      result1 = null;
                                                                                                                                      pos = pos2;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    result1 = null;
                                                                                                                                    pos = pos2;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  result1 = null;
                                                                                                                                  pos = pos2;
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                result1 = null;
                                                                                                                                pos = pos2;
                                                                                                                              }
                                                                                                                              if (result1 === null) {
                                                                                                                                pos2 = pos;
                                                                                                                                result1 = parse_m();
                                                                                                                                if (result1 !== null) {
                                                                                                                                  result2 = parse_u();
                                                                                                                                  if (result2 !== null) {
                                                                                                                                    result3 = parse_h();
                                                                                                                                    if (result3 !== null) {
                                                                                                                                      result4 = parse_a();
                                                                                                                                      if (result4 !== null) {
                                                                                                                                        result1 = [result1, result2, result3, result4];
                                                                                                                                      } else {
                                                                                                                                        result1 = null;
                                                                                                                                        pos = pos2;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      result1 = null;
                                                                                                                                      pos = pos2;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    result1 = null;
                                                                                                                                    pos = pos2;
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  result1 = null;
                                                                                                                                  pos = pos2;
                                                                                                                                }
                                                                                                                                if (result1 === null) {
                                                                                                                                  pos2 = pos;
                                                                                                                                  result1 = parse_d();
                                                                                                                                  if (result1 !== null) {
                                                                                                                                    result2 = parse_o();
                                                                                                                                    if (result2 !== null) {
                                                                                                                                      result3 = parse_h();
                                                                                                                                      if (result3 !== null) {
                                                                                                                                        result4 = parse_a();
                                                                                                                                        if (result4 !== null) {
                                                                                                                                          result1 = [result1, result2, result3, result4];
                                                                                                                                        } else {
                                                                                                                                          result1 = null;
                                                                                                                                          pos = pos2;
                                                                                                                                        }
                                                                                                                                      } else {
                                                                                                                                        result1 = null;
                                                                                                                                        pos = pos2;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      result1 = null;
                                                                                                                                      pos = pos2;
                                                                                                                                    }
                                                                                                                                  } else {
                                                                                                                                    result1 = null;
                                                                                                                                    pos = pos2;
                                                                                                                                  }
                                                                                                                                  if (result1 === null) {
                                                                                                                                    pos2 = pos;
                                                                                                                                    result1 = parse_t();
                                                                                                                                    if (result1 !== null) {
                                                                                                                                      result2 = parse_o();
                                                                                                                                      if (result2 !== null) {
                                                                                                                                        result3 = parse_h();
                                                                                                                                        if (result3 !== null) {
                                                                                                                                          result4 = parse_u();
                                                                                                                                          if (result4 !== null) {
                                                                                                                                            result1 = [result1, result2, result3, result4];
                                                                                                                                          } else {
                                                                                                                                            result1 = null;
                                                                                                                                            pos = pos2;
                                                                                                                                          }
                                                                                                                                        } else {
                                                                                                                                          result1 = null;
                                                                                                                                          pos = pos2;
                                                                                                                                        }
                                                                                                                                      } else {
                                                                                                                                        result1 = null;
                                                                                                                                        pos = pos2;
                                                                                                                                      }
                                                                                                                                    } else {
                                                                                                                                      result1 = null;
                                                                                                                                      pos = pos2;
                                                                                                                                    }
                                                                                                                                    if (result1 === null) {
                                                                                                                                      pos2 = pos;
                                                                                                                                      result1 = parse_v();
                                                                                                                                      if (result1 !== null) {
                                                                                                                                        result2 = parse_a();
                                                                                                                                        if (result2 !== null) {
                                                                                                                                          result3 = parse_h();
                                                                                                                                          if (result3 !== null) {
                                                                                                                                            result4 = parse_i();
                                                                                                                                            if (result4 !== null) {
                                                                                                                                              result1 = [result1, result2, result3, result4];
                                                                                                                                            } else {
                                                                                                                                              result1 = null;
                                                                                                                                              pos = pos2;
                                                                                                                                            }
                                                                                                                                          } else {
                                                                                                                                            result1 = null;
                                                                                                                                            pos = pos2;
                                                                                                                                          }
                                                                                                                                        } else {
                                                                                                                                          result1 = null;
                                                                                                                                          pos = pos2;
                                                                                                                                        }
                                                                                                                                      } else {
                                                                                                                                        result1 = null;
                                                                                                                                        pos = pos2;
                                                                                                                                      }
                                                                                                                                      if (result1 === null) {
                                                                                                                                        pos2 = pos;
                                                                                                                                        result1 = parse_p();
                                                                                                                                        if (result1 !== null) {
                                                                                                                                          result2 = parse_a();
                                                                                                                                          if (result2 !== null) {
                                                                                                                                            result3 = parse_h();
                                                                                                                                            if (result3 !== null) {
                                                                                                                                              result4 = parse_e();
                                                                                                                                              if (result4 !== null) {
                                                                                                                                                result1 = [result1, result2, result3, result4];
                                                                                                                                              } else {
                                                                                                                                                result1 = null;
                                                                                                                                                pos = pos2;
                                                                                                                                              }
                                                                                                                                            } else {
                                                                                                                                              result1 = null;
                                                                                                                                              pos = pos2;
                                                                                                                                            }
                                                                                                                                          } else {
                                                                                                                                            result1 = null;
                                                                                                                                            pos = pos2;
                                                                                                                                          }
                                                                                                                                        } else {
                                                                                                                                          result1 = null;
                                                                                                                                          pos = pos2;
                                                                                                                                        }
                                                                                                                                        if (result1 === null) {
                                                                                                                                          pos2 = pos;
                                                                                                                                          result1 = parse_z();
                                                                                                                                          if (result1 !== null) {
                                                                                                                                            result2 = parse_u();
                                                                                                                                            if (result2 !== null) {
                                                                                                                                              result3 = parse_h();
                                                                                                                                              if (result3 !== null) {
                                                                                                                                                result4 = parse_u();
                                                                                                                                                if (result4 !== null) {
                                                                                                                                                  result1 = [result1, result2, result3, result4];
                                                                                                                                                } else {
                                                                                                                                                  result1 = null;
                                                                                                                                                  pos = pos2;
                                                                                                                                                }
                                                                                                                                              } else {
                                                                                                                                                result1 = null;
                                                                                                                                                pos = pos2;
                                                                                                                                              }
                                                                                                                                            } else {
                                                                                                                                              result1 = null;
                                                                                                                                              pos = pos2;
                                                                                                                                            }
                                                                                                                                          } else {
                                                                                                                                            result1 = null;
                                                                                                                                            pos = pos2;
                                                                                                                                          }
                                                                                                                                          if (result1 === null) {
                                                                                                                                            pos2 = pos;
                                                                                                                                            result1 = parse_s();
                                                                                                                                            if (result1 !== null) {
                                                                                                                                              result2 = parse_a();
                                                                                                                                              if (result2 !== null) {
                                                                                                                                                result3 = parse_h();
                                                                                                                                                if (result3 !== null) {
                                                                                                                                                  result4 = parse_e();
                                                                                                                                                  if (result4 !== null) {
                                                                                                                                                    result1 = [result1, result2, result3, result4];
                                                                                                                                                  } else {
                                                                                                                                                    result1 = null;
                                                                                                                                                    pos = pos2;
                                                                                                                                                  }
                                                                                                                                                } else {
                                                                                                                                                  result1 = null;
                                                                                                                                                  pos = pos2;
                                                                                                                                                }
                                                                                                                                              } else {
                                                                                                                                                result1 = null;
                                                                                                                                                pos = pos2;
                                                                                                                                              }
                                                                                                                                            } else {
                                                                                                                                              result1 = null;
                                                                                                                                              pos = pos2;
                                                                                                                                            }
                                                                                                                                            if (result1 === null) {
                                                                                                                                              pos2 = pos;
                                                                                                                                              result1 = parse_l();
                                                                                                                                              if (result1 !== null) {
                                                                                                                                                result2 = parse_a();
                                                                                                                                                if (result2 !== null) {
                                                                                                                                                  result3 = parse_h();
                                                                                                                                                  if (result3 !== null) {
                                                                                                                                                    result4 = parse_a();
                                                                                                                                                    if (result4 !== null) {
                                                                                                                                                      result1 = [result1, result2, result3, result4];
                                                                                                                                                    } else {
                                                                                                                                                      result1 = null;
                                                                                                                                                      pos = pos2;
                                                                                                                                                    }
                                                                                                                                                  } else {
                                                                                                                                                    result1 = null;
                                                                                                                                                    pos = pos2;
                                                                                                                                                  }
                                                                                                                                                } else {
                                                                                                                                                  result1 = null;
                                                                                                                                                  pos = pos2;
                                                                                                                                                }
                                                                                                                                              } else {
                                                                                                                                                result1 = null;
                                                                                                                                                pos = pos2;
                                                                                                                                              }
                                                                                                                                              if (result1 === null) {
                                                                                                                                                pos2 = pos;
                                                                                                                                                result1 = parse_k();
                                                                                                                                                if (result1 !== null) {
                                                                                                                                                  result2 = parse_e();
                                                                                                                                                  if (result2 !== null) {
                                                                                                                                                    result3 = parse_h();
                                                                                                                                                    if (result3 !== null) {
                                                                                                                                                      result4 = parse_u();
                                                                                                                                                      if (result4 !== null) {
                                                                                                                                                        result1 = [result1, result2, result3, result4];
                                                                                                                                                      } else {
                                                                                                                                                        result1 = null;
                                                                                                                                                        pos = pos2;
                                                                                                                                                      }
                                                                                                                                                    } else {
                                                                                                                                                      result1 = null;
                                                                                                                                                      pos = pos2;
                                                                                                                                                    }
                                                                                                                                                  } else {
                                                                                                                                                    result1 = null;
                                                                                                                                                    pos = pos2;
                                                                                                                                                  }
                                                                                                                                                } else {
                                                                                                                                                  result1 = null;
                                                                                                                                                  pos = pos2;
                                                                                                                                                }
                                                                                                                                                if (result1 === null) {
                                                                                                                                                  pos2 = pos;
                                                                                                                                                  result1 = parse_s();
                                                                                                                                                  if (result1 !== null) {
                                                                                                                                                    result2 = parse_a();
                                                                                                                                                    if (result2 !== null) {
                                                                                                                                                      result3 = parse_h();
                                                                                                                                                      if (result3 !== null) {
                                                                                                                                                        result4 = parse_u();
                                                                                                                                                        if (result4 !== null) {
                                                                                                                                                          result1 = [result1, result2, result3, result4];
                                                                                                                                                        } else {
                                                                                                                                                          result1 = null;
                                                                                                                                                          pos = pos2;
                                                                                                                                                        }
                                                                                                                                                      } else {
                                                                                                                                                        result1 = null;
                                                                                                                                                        pos = pos2;
                                                                                                                                                      }
                                                                                                                                                    } else {
                                                                                                                                                      result1 = null;
                                                                                                                                                      pos = pos2;
                                                                                                                                                    }
                                                                                                                                                  } else {
                                                                                                                                                    result1 = null;
                                                                                                                                                    pos = pos2;
                                                                                                                                                  }
                                                                                                                                                  if (result1 === null) {
                                                                                                                                                    pos2 = pos;
                                                                                                                                                    result1 = parse_d();
                                                                                                                                                    if (result1 !== null) {
                                                                                                                                                      result2 = parse_a();
                                                                                                                                                      if (result2 !== null) {
                                                                                                                                                        result3 = parse_h();
                                                                                                                                                        if (result3 !== null) {
                                                                                                                                                          result4 = parse_i();
                                                                                                                                                          if (result4 !== null) {
                                                                                                                                                            result1 = [result1, result2, result3, result4];
                                                                                                                                                          } else {
                                                                                                                                                            result1 = null;
                                                                                                                                                            pos = pos2;
                                                                                                                                                          }
                                                                                                                                                        } else {
                                                                                                                                                          result1 = null;
                                                                                                                                                          pos = pos2;
                                                                                                                                                        }
                                                                                                                                                      } else {
                                                                                                                                                        result1 = null;
                                                                                                                                                        pos = pos2;
                                                                                                                                                      }
                                                                                                                                                    } else {
                                                                                                                                                      result1 = null;
                                                                                                                                                      pos = pos2;
                                                                                                                                                    }
                                                                                                                                                    if (result1 === null) {
                                                                                                                                                      pos2 = pos;
                                                                                                                                                      result1 = parse_j();
                                                                                                                                                      if (result1 !== null) {
                                                                                                                                                        result2 = parse_e();
                                                                                                                                                        if (result2 !== null) {
                                                                                                                                                          result3 = parse_h();
                                                                                                                                                          if (result3 !== null) {
                                                                                                                                                            result4 = parse_u();
                                                                                                                                                            if (result4 !== null) {
                                                                                                                                                              result1 = [result1, result2, result3, result4];
                                                                                                                                                            } else {
                                                                                                                                                              result1 = null;
                                                                                                                                                              pos = pos2;
                                                                                                                                                            }
                                                                                                                                                          } else {
                                                                                                                                                            result1 = null;
                                                                                                                                                            pos = pos2;
                                                                                                                                                          }
                                                                                                                                                        } else {
                                                                                                                                                          result1 = null;
                                                                                                                                                          pos = pos2;
                                                                                                                                                        }
                                                                                                                                                      } else {
                                                                                                                                                        result1 = null;
                                                                                                                                                        pos = pos2;
                                                                                                                                                      }
                                                                                                                                                      if (result1 === null) {
                                                                                                                                                        pos2 = pos;
                                                                                                                                                        result1 = parse_s();
                                                                                                                                                        if (result1 !== null) {
                                                                                                                                                          result2 = parse_a();
                                                                                                                                                          if (result2 !== null) {
                                                                                                                                                            result3 = parse_h();
                                                                                                                                                            if (result3 !== null) {
                                                                                                                                                              result4 = parse_a();
                                                                                                                                                              if (result4 !== null) {
                                                                                                                                                                result1 = [result1, result2, result3, result4];
                                                                                                                                                              } else {
                                                                                                                                                                result1 = null;
                                                                                                                                                                pos = pos2;
                                                                                                                                                              }
                                                                                                                                                            } else {
                                                                                                                                                              result1 = null;
                                                                                                                                                              pos = pos2;
                                                                                                                                                            }
                                                                                                                                                          } else {
                                                                                                                                                            result1 = null;
                                                                                                                                                            pos = pos2;
                                                                                                                                                          }
                                                                                                                                                        } else {
                                                                                                                                                          result1 = null;
                                                                                                                                                          pos = pos2;
                                                                                                                                                        }
                                                                                                                                                        if (result1 === null) {
                                                                                                                                                          pos2 = pos;
                                                                                                                                                          result1 = parse_k();
                                                                                                                                                          if (result1 !== null) {
                                                                                                                                                            result2 = parse_a();
                                                                                                                                                            if (result2 !== null) {
                                                                                                                                                              result3 = parse_u();
                                                                                                                                                              if (result3 !== null) {
                                                                                                                                                                result1 = [result1, result2, result3];
                                                                                                                                                              } else {
                                                                                                                                                                result1 = null;
                                                                                                                                                                pos = pos2;
                                                                                                                                                              }
                                                                                                                                                            } else {
                                                                                                                                                              result1 = null;
                                                                                                                                                              pos = pos2;
                                                                                                                                                            }
                                                                                                                                                          } else {
                                                                                                                                                            result1 = null;
                                                                                                                                                            pos = pos2;
                                                                                                                                                          }
                                                                                                                                                          if (result1 === null) {
                                                                                                                                                            pos2 = pos;
                                                                                                                                                            result1 = parse_t();
                                                                                                                                                            if (result1 !== null) {
                                                                                                                                                              result2 = parse_a();
                                                                                                                                                              if (result2 !== null) {
                                                                                                                                                                result3 = parse_h();
                                                                                                                                                                if (result3 !== null) {
                                                                                                                                                                  result4 = parse_u();
                                                                                                                                                                  if (result4 !== null) {
                                                                                                                                                                    result1 = [result1, result2, result3, result4];
                                                                                                                                                                  } else {
                                                                                                                                                                    result1 = null;
                                                                                                                                                                    pos = pos2;
                                                                                                                                                                  }
                                                                                                                                                                } else {
                                                                                                                                                                  result1 = null;
                                                                                                                                                                  pos = pos2;
                                                                                                                                                                }
                                                                                                                                                              } else {
                                                                                                                                                                result1 = null;
                                                                                                                                                                pos = pos2;
                                                                                                                                                              }
                                                                                                                                                            } else {
                                                                                                                                                              result1 = null;
                                                                                                                                                              pos = pos2;
                                                                                                                                                            }
                                                                                                                                                            if (result1 === null) {
                                                                                                                                                              pos2 = pos;
                                                                                                                                                              result1 = parse_n();
                                                                                                                                                              if (result1 !== null) {
                                                                                                                                                                result2 = parse_a();
                                                                                                                                                                if (result2 !== null) {
                                                                                                                                                                  result3 = parse_h();
                                                                                                                                                                  if (result3 !== null) {
                                                                                                                                                                    result4 = parse_i();
                                                                                                                                                                    if (result4 !== null) {
                                                                                                                                                                      result1 = [result1, result2, result3, result4];
                                                                                                                                                                    } else {
                                                                                                                                                                      result1 = null;
                                                                                                                                                                      pos = pos2;
                                                                                                                                                                    }
                                                                                                                                                                  } else {
                                                                                                                                                                    result1 = null;
                                                                                                                                                                    pos = pos2;
                                                                                                                                                                  }
                                                                                                                                                                } else {
                                                                                                                                                                  result1 = null;
                                                                                                                                                                  pos = pos2;
                                                                                                                                                                }
                                                                                                                                                              } else {
                                                                                                                                                                result1 = null;
                                                                                                                                                                pos = pos2;
                                                                                                                                                              }
                                                                                                                                                              if (result1 === null) {
                                                                                                                                                                pos2 = pos;
                                                                                                                                                                result1 = parse_j();
                                                                                                                                                                if (result1 !== null) {
                                                                                                                                                                  result2 = parse_o();
                                                                                                                                                                  if (result2 !== null) {
                                                                                                                                                                    result3 = parse_h();
                                                                                                                                                                    if (result3 !== null) {
                                                                                                                                                                      result4 = parse_a();
                                                                                                                                                                      if (result4 !== null) {
                                                                                                                                                                        result1 = [result1, result2, result3, result4];
                                                                                                                                                                      } else {
                                                                                                                                                                        result1 = null;
                                                                                                                                                                        pos = pos2;
                                                                                                                                                                      }
                                                                                                                                                                    } else {
                                                                                                                                                                      result1 = null;
                                                                                                                                                                      pos = pos2;
                                                                                                                                                                    }
                                                                                                                                                                  } else {
                                                                                                                                                                    result1 = null;
                                                                                                                                                                    pos = pos2;
                                                                                                                                                                  }
                                                                                                                                                                } else {
                                                                                                                                                                  result1 = null;
                                                                                                                                                                  pos = pos2;
                                                                                                                                                                }
                                                                                                                                                                if (result1 === null) {
                                                                                                                                                                  pos2 = pos;
                                                                                                                                                                  result1 = parse_b();
                                                                                                                                                                  if (result1 !== null) {
                                                                                                                                                                    result2 = parse_i();
                                                                                                                                                                    if (result2 !== null) {
                                                                                                                                                                      result3 = parse_h();
                                                                                                                                                                      if (result3 !== null) {
                                                                                                                                                                        result4 = parse_u();
                                                                                                                                                                        if (result4 !== null) {
                                                                                                                                                                          result1 = [result1, result2, result3, result4];
                                                                                                                                                                        } else {
                                                                                                                                                                          result1 = null;
                                                                                                                                                                          pos = pos2;
                                                                                                                                                                        }
                                                                                                                                                                      } else {
                                                                                                                                                                        result1 = null;
                                                                                                                                                                        pos = pos2;
                                                                                                                                                                      }
                                                                                                                                                                    } else {
                                                                                                                                                                      result1 = null;
                                                                                                                                                                      pos = pos2;
                                                                                                                                                                    }
                                                                                                                                                                  } else {
                                                                                                                                                                    result1 = null;
                                                                                                                                                                    pos = pos2;
                                                                                                                                                                  }
                                                                                                                                                                  if (result1 === null) {
                                                                                                                                                                    pos2 = pos;
                                                                                                                                                                    result1 = parse_l();
                                                                                                                                                                    if (result1 !== null) {
                                                                                                                                                                      result2 = parse_i();
                                                                                                                                                                      if (result2 !== null) {
                                                                                                                                                                        result3 = parse_h();
                                                                                                                                                                        if (result3 !== null) {
                                                                                                                                                                          result4 = parse_o();
                                                                                                                                                                          if (result4 !== null) {
                                                                                                                                                                            result1 = [result1, result2, result3, result4];
                                                                                                                                                                          } else {
                                                                                                                                                                            result1 = null;
                                                                                                                                                                            pos = pos2;
                                                                                                                                                                          }
                                                                                                                                                                        } else {
                                                                                                                                                                          result1 = null;
                                                                                                                                                                          pos = pos2;
                                                                                                                                                                        }
                                                                                                                                                                      } else {
                                                                                                                                                                        result1 = null;
                                                                                                                                                                        pos = pos2;
                                                                                                                                                                      }
                                                                                                                                                                    } else {
                                                                                                                                                                      result1 = null;
                                                                                                                                                                      pos = pos2;
                                                                                                                                                                    }
                                                                                                                                                                    if (result1 === null) {
                                                                                                                                                                      pos2 = pos;
                                                                                                                                                                      result1 = parse_p();
                                                                                                                                                                      if (result1 !== null) {
                                                                                                                                                                        result2 = parse_a();
                                                                                                                                                                        if (result2 !== null) {
                                                                                                                                                                          result3 = parse_u();
                                                                                                                                                                          if (result3 !== null) {
                                                                                                                                                                            result1 = [result1, result2, result3];
                                                                                                                                                                          } else {
                                                                                                                                                                            result1 = null;
                                                                                                                                                                            pos = pos2;
                                                                                                                                                                          }
                                                                                                                                                                        } else {
                                                                                                                                                                          result1 = null;
                                                                                                                                                                          pos = pos2;
                                                                                                                                                                        }
                                                                                                                                                                      } else {
                                                                                                                                                                        result1 = null;
                                                                                                                                                                        pos = pos2;
                                                                                                                                                                      }
                                                                                                                                                                      if (result1 === null) {
                                                                                                                                                                        pos2 = pos;
                                                                                                                                                                        result1 = parse_m();
                                                                                                                                                                        if (result1 !== null) {
                                                                                                                                                                          result2 = parse_i();
                                                                                                                                                                          if (result2 !== null) {
                                                                                                                                                                            result3 = parse_h();
                                                                                                                                                                            if (result3 !== null) {
                                                                                                                                                                              result4 = parse_u();
                                                                                                                                                                              if (result4 !== null) {
                                                                                                                                                                                result1 = [result1, result2, result3, result4];
                                                                                                                                                                              } else {
                                                                                                                                                                                result1 = null;
                                                                                                                                                                                pos = pos2;
                                                                                                                                                                              }
                                                                                                                                                                            } else {
                                                                                                                                                                              result1 = null;
                                                                                                                                                                              pos = pos2;
                                                                                                                                                                            }
                                                                                                                                                                          } else {
                                                                                                                                                                            result1 = null;
                                                                                                                                                                            pos = pos2;
                                                                                                                                                                          }
                                                                                                                                                                        } else {
                                                                                                                                                                          result1 = null;
                                                                                                                                                                          pos = pos2;
                                                                                                                                                                        }
                                                                                                                                                                        if (result1 === null) {
                                                                                                                                                                          pos2 = pos;
                                                                                                                                                                          result1 = parse_k();
                                                                                                                                                                          if (result1 !== null) {
                                                                                                                                                                            result2 = parse_u();
                                                                                                                                                                            if (result2 !== null) {
                                                                                                                                                                              result3 = parse_h();
                                                                                                                                                                              if (result3 !== null) {
                                                                                                                                                                                result4 = parse_i();
                                                                                                                                                                                if (result4 !== null) {
                                                                                                                                                                                  result1 = [result1, result2, result3, result4];
                                                                                                                                                                                } else {
                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                }
                                                                                                                                                                              } else {
                                                                                                                                                                                result1 = null;
                                                                                                                                                                                pos = pos2;
                                                                                                                                                                              }
                                                                                                                                                                            } else {
                                                                                                                                                                              result1 = null;
                                                                                                                                                                              pos = pos2;
                                                                                                                                                                            }
                                                                                                                                                                          } else {
                                                                                                                                                                            result1 = null;
                                                                                                                                                                            pos = pos2;
                                                                                                                                                                          }
                                                                                                                                                                          if (result1 === null) {
                                                                                                                                                                            pos2 = pos;
                                                                                                                                                                            result1 = parse_j();
                                                                                                                                                                            if (result1 !== null) {
                                                                                                                                                                              result2 = parse_i();
                                                                                                                                                                              if (result2 !== null) {
                                                                                                                                                                                result3 = parse_h();
                                                                                                                                                                                if (result3 !== null) {
                                                                                                                                                                                  result4 = parse_a();
                                                                                                                                                                                  if (result4 !== null) {
                                                                                                                                                                                    result1 = [result1, result2, result3, result4];
                                                                                                                                                                                  } else {
                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                  }
                                                                                                                                                                                } else {
                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                }
                                                                                                                                                                              } else {
                                                                                                                                                                                result1 = null;
                                                                                                                                                                                pos = pos2;
                                                                                                                                                                              }
                                                                                                                                                                            } else {
                                                                                                                                                                              result1 = null;
                                                                                                                                                                              pos = pos2;
                                                                                                                                                                            }
                                                                                                                                                                            if (result1 === null) {
                                                                                                                                                                              pos2 = pos;
                                                                                                                                                                              result1 = parse_s();
                                                                                                                                                                              if (result1 !== null) {
                                                                                                                                                                                result2 = parse_i();
                                                                                                                                                                                if (result2 !== null) {
                                                                                                                                                                                  result3 = parse_h();
                                                                                                                                                                                  if (result3 !== null) {
                                                                                                                                                                                    result4 = parse_a();
                                                                                                                                                                                    if (result4 !== null) {
                                                                                                                                                                                      result1 = [result1, result2, result3, result4];
                                                                                                                                                                                    } else {
                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                    }
                                                                                                                                                                                  } else {
                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                  }
                                                                                                                                                                                } else {
                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                }
                                                                                                                                                                              } else {
                                                                                                                                                                                result1 = null;
                                                                                                                                                                                pos = pos2;
                                                                                                                                                                              }
                                                                                                                                                                              if (result1 === null) {
                                                                                                                                                                                pos2 = pos;
                                                                                                                                                                                result1 = parse_p();
                                                                                                                                                                                if (result1 !== null) {
                                                                                                                                                                                  result2 = parse_o();
                                                                                                                                                                                  if (result2 !== null) {
                                                                                                                                                                                    result3 = parse_h();
                                                                                                                                                                                    if (result3 !== null) {
                                                                                                                                                                                      result4 = parse_o();
                                                                                                                                                                                      if (result4 !== null) {
                                                                                                                                                                                        result1 = [result1, result2, result3, result4];
                                                                                                                                                                                      } else {
                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                      }
                                                                                                                                                                                    } else {
                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                    }
                                                                                                                                                                                  } else {
                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                  }
                                                                                                                                                                                } else {
                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                }
                                                                                                                                                                                if (result1 === null) {
                                                                                                                                                                                  pos2 = pos;
                                                                                                                                                                                  result1 = parse_p();
                                                                                                                                                                                  if (result1 !== null) {
                                                                                                                                                                                    result2 = parse_e();
                                                                                                                                                                                    if (result2 !== null) {
                                                                                                                                                                                      result3 = parse_h();
                                                                                                                                                                                      if (result3 !== null) {
                                                                                                                                                                                        result4 = parse_a();
                                                                                                                                                                                        if (result4 !== null) {
                                                                                                                                                                                          result1 = [result1, result2, result3, result4];
                                                                                                                                                                                        } else {
                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                        }
                                                                                                                                                                                      } else {
                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                      }
                                                                                                                                                                                    } else {
                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                    }
                                                                                                                                                                                  } else {
                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                  }
                                                                                                                                                                                  if (result1 === null) {
                                                                                                                                                                                    pos2 = pos;
                                                                                                                                                                                    result1 = parse_r();
                                                                                                                                                                                    if (result1 !== null) {
                                                                                                                                                                                      result2 = parse_o();
                                                                                                                                                                                      if (result2 !== null) {
                                                                                                                                                                                        result3 = parse_h();
                                                                                                                                                                                        if (result3 !== null) {
                                                                                                                                                                                          result4 = parse_i();
                                                                                                                                                                                          if (result4 !== null) {
                                                                                                                                                                                            result1 = [result1, result2, result3, result4];
                                                                                                                                                                                          } else {
                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                          }
                                                                                                                                                                                        } else {
                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                        }
                                                                                                                                                                                      } else {
                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                      }
                                                                                                                                                                                    } else {
                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (result1 === null) {
                                                                                                                                                                                      pos2 = pos;
                                                                                                                                                                                      result1 = parse_r();
                                                                                                                                                                                      if (result1 !== null) {
                                                                                                                                                                                        result2 = parse_o();
                                                                                                                                                                                        if (result2 !== null) {
                                                                                                                                                                                          result3 = parse_h();
                                                                                                                                                                                          if (result3 !== null) {
                                                                                                                                                                                            result4 = parse_e();
                                                                                                                                                                                            if (result4 !== null) {
                                                                                                                                                                                              result1 = [result1, result2, result3, result4];
                                                                                                                                                                                            } else {
                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                            }
                                                                                                                                                                                          } else {
                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                          }
                                                                                                                                                                                        } else {
                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                        }
                                                                                                                                                                                      } else {
                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                      }
                                                                                                                                                                                      if (result1 === null) {
                                                                                                                                                                                        pos2 = pos;
                                                                                                                                                                                        result1 = parse_r();
                                                                                                                                                                                        if (result1 !== null) {
                                                                                                                                                                                          result2 = parse_o();
                                                                                                                                                                                          if (result2 !== null) {
                                                                                                                                                                                            result3 = parse_h();
                                                                                                                                                                                            if (result3 !== null) {
                                                                                                                                                                                              result4 = parse_o();
                                                                                                                                                                                              if (result4 !== null) {
                                                                                                                                                                                                result1 = [result1, result2, result3, result4];
                                                                                                                                                                                              } else {
                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                              }
                                                                                                                                                                                            } else {
                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                            }
                                                                                                                                                                                          } else {
                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                          }
                                                                                                                                                                                        } else {
                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                        }
                                                                                                                                                                                        if (result1 === null) {
                                                                                                                                                                                          pos2 = pos;
                                                                                                                                                                                          result1 = parse_r();
                                                                                                                                                                                          if (result1 !== null) {
                                                                                                                                                                                            result2 = parse_o();
                                                                                                                                                                                            if (result2 !== null) {
                                                                                                                                                                                              result3 = parse_h();
                                                                                                                                                                                              if (result3 !== null) {
                                                                                                                                                                                                result4 = parse_u();
                                                                                                                                                                                                if (result4 !== null) {
                                                                                                                                                                                                  result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                }
                                                                                                                                                                                              } else {
                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                              }
                                                                                                                                                                                            } else {
                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                            }
                                                                                                                                                                                          } else {
                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                          }
                                                                                                                                                                                          if (result1 === null) {
                                                                                                                                                                                            pos2 = pos;
                                                                                                                                                                                            result1 = parse_r();
                                                                                                                                                                                            if (result1 !== null) {
                                                                                                                                                                                              result2 = parse_o();
                                                                                                                                                                                              if (result2 !== null) {
                                                                                                                                                                                                result3 = parse_h();
                                                                                                                                                                                                if (result3 !== null) {
                                                                                                                                                                                                  result4 = parse_a();
                                                                                                                                                                                                  if (result4 !== null) {
                                                                                                                                                                                                    result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                                  }
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                }
                                                                                                                                                                                              } else {
                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                              }
                                                                                                                                                                                            } else {
                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                            }
                                                                                                                                                                                            if (result1 === null) {
                                                                                                                                                                                              pos2 = pos;
                                                                                                                                                                                              result1 = parse_r();
                                                                                                                                                                                              if (result1 !== null) {
                                                                                                                                                                                                result2 = parse_e();
                                                                                                                                                                                                if (result2 !== null) {
                                                                                                                                                                                                  result3 = parse_h();
                                                                                                                                                                                                  if (result3 !== null) {
                                                                                                                                                                                                    result4 = parse_e();
                                                                                                                                                                                                    if (result4 !== null) {
                                                                                                                                                                                                      result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                                    }
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                                  }
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                }
                                                                                                                                                                                              } else {
                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                              }
                                                                                                                                                                                              if (result1 === null) {
                                                                                                                                                                                                pos2 = pos;
                                                                                                                                                                                                result1 = parse_l();
                                                                                                                                                                                                if (result1 !== null) {
                                                                                                                                                                                                  result2 = parse_e();
                                                                                                                                                                                                  if (result2 !== null) {
                                                                                                                                                                                                    result3 = parse_h();
                                                                                                                                                                                                    if (result3 !== null) {
                                                                                                                                                                                                      result4 = parse_o();
                                                                                                                                                                                                      if (result4 !== null) {
                                                                                                                                                                                                        result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                                    }
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                                  }
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                }
                                                                                                                                                                                                if (result1 === null) {
                                                                                                                                                                                                  pos2 = pos;
                                                                                                                                                                                                  result1 = parse_j();
                                                                                                                                                                                                  if (result1 !== null) {
                                                                                                                                                                                                    result2 = parse_u();
                                                                                                                                                                                                    if (result2 !== null) {
                                                                                                                                                                                                      result3 = parse_h();
                                                                                                                                                                                                      if (result3 !== null) {
                                                                                                                                                                                                        result4 = parse_o();
                                                                                                                                                                                                        if (result4 !== null) {
                                                                                                                                                                                                          result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                                        }
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                                    }
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                                  }
                                                                                                                                                                                                  if (result1 === null) {
                                                                                                                                                                                                    pos2 = pos;
                                                                                                                                                                                                    result1 = parse_f();
                                                                                                                                                                                                    if (result1 !== null) {
                                                                                                                                                                                                      result2 = parse_u();
                                                                                                                                                                                                      if (result2 !== null) {
                                                                                                                                                                                                        result3 = parse_h();
                                                                                                                                                                                                        if (result3 !== null) {
                                                                                                                                                                                                          result4 = parse_i();
                                                                                                                                                                                                          if (result4 !== null) {
                                                                                                                                                                                                            result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                                          }
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                                        }
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if (result1 === null) {
                                                                                                                                                                                                      pos2 = pos;
                                                                                                                                                                                                      result1 = parse_d();
                                                                                                                                                                                                      if (result1 !== null) {
                                                                                                                                                                                                        result2 = parse_a();
                                                                                                                                                                                                        if (result2 !== null) {
                                                                                                                                                                                                          result3 = parse_i();
                                                                                                                                                                                                          if (result3 !== null) {
                                                                                                                                                                                                            result1 = [result1, result2, result3];
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                                          }
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                                        }
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                                      }
                                                                                                                                                                                                      if (result1 === null) {
                                                                                                                                                                                                        pos2 = pos;
                                                                                                                                                                                                        result1 = parse_g();
                                                                                                                                                                                                        if (result1 !== null) {
                                                                                                                                                                                                          result2 = parse_a();
                                                                                                                                                                                                          if (result2 !== null) {
                                                                                                                                                                                                            result3 = parse_h();
                                                                                                                                                                                                            if (result3 !== null) {
                                                                                                                                                                                                              result4 = parse_i();
                                                                                                                                                                                                              if (result4 !== null) {
                                                                                                                                                                                                                result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                                              }
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                                            }
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                                          }
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if (result1 === null) {
                                                                                                                                                                                                          pos2 = pos;
                                                                                                                                                                                                          result1 = parse_z();
                                                                                                                                                                                                          if (result1 !== null) {
                                                                                                                                                                                                            result2 = parse_o();
                                                                                                                                                                                                            if (result2 !== null) {
                                                                                                                                                                                                              result3 = parse_h();
                                                                                                                                                                                                              if (result3 !== null) {
                                                                                                                                                                                                                result4 = parse_o();
                                                                                                                                                                                                                if (result4 !== null) {
                                                                                                                                                                                                                  result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                                }
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                                              }
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                                            }
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                                          }
                                                                                                                                                                                                          if (result1 === null) {
                                                                                                                                                                                                            pos2 = pos;
                                                                                                                                                                                                            result1 = parse_b();
                                                                                                                                                                                                            if (result1 !== null) {
                                                                                                                                                                                                              result2 = parse_e();
                                                                                                                                                                                                              if (result2 !== null) {
                                                                                                                                                                                                                result3 = parse_h();
                                                                                                                                                                                                                if (result3 !== null) {
                                                                                                                                                                                                                  result4 = parse_u();
                                                                                                                                                                                                                  if (result4 !== null) {
                                                                                                                                                                                                                    result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                                }
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                                              }
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if (result1 === null) {
                                                                                                                                                                                                              pos2 = pos;
                                                                                                                                                                                                              result1 = parse_r();
                                                                                                                                                                                                              if (result1 !== null) {
                                                                                                                                                                                                                result2 = parse_i();
                                                                                                                                                                                                                if (result2 !== null) {
                                                                                                                                                                                                                  result3 = parse_h();
                                                                                                                                                                                                                  if (result3 !== null) {
                                                                                                                                                                                                                    result4 = parse_e();
                                                                                                                                                                                                                    if (result4 !== null) {
                                                                                                                                                                                                                      result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                                }
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                                              }
                                                                                                                                                                                                              if (result1 === null) {
                                                                                                                                                                                                                pos2 = pos;
                                                                                                                                                                                                                result1 = parse_s();
                                                                                                                                                                                                                if (result1 !== null) {
                                                                                                                                                                                                                  result2 = parse_e();
                                                                                                                                                                                                                  if (result2 !== null) {
                                                                                                                                                                                                                    result3 = parse_h();
                                                                                                                                                                                                                    if (result3 !== null) {
                                                                                                                                                                                                                      result4 = parse_i();
                                                                                                                                                                                                                      if (result4 !== null) {
                                                                                                                                                                                                                        result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                if (result1 === null) {
                                                                                                                                                                                                                  pos2 = pos;
                                                                                                                                                                                                                  result1 = parse_s();
                                                                                                                                                                                                                  if (result1 !== null) {
                                                                                                                                                                                                                    result2 = parse_e();
                                                                                                                                                                                                                    if (result2 !== null) {
                                                                                                                                                                                                                      result3 = parse_h();
                                                                                                                                                                                                                      if (result3 !== null) {
                                                                                                                                                                                                                        result4 = parse_a();
                                                                                                                                                                                                                        if (result4 !== null) {
                                                                                                                                                                                                                          result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  if (result1 === null) {
                                                                                                                                                                                                                    pos2 = pos;
                                                                                                                                                                                                                    result1 = parse_v();
                                                                                                                                                                                                                    if (result1 !== null) {
                                                                                                                                                                                                                      result2 = parse_u();
                                                                                                                                                                                                                      if (result2 !== null) {
                                                                                                                                                                                                                        result3 = parse_h();
                                                                                                                                                                                                                        if (result3 !== null) {
                                                                                                                                                                                                                          result4 = parse_e();
                                                                                                                                                                                                                          if (result4 !== null) {
                                                                                                                                                                                                                            result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    } else {
                                                                                                                                                                                                                      result1 = null;
                                                                                                                                                                                                                      pos = pos2;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    if (result1 === null) {
                                                                                                                                                                                                                      pos2 = pos;
                                                                                                                                                                                                                      result1 = parse_k();
                                                                                                                                                                                                                      if (result1 !== null) {
                                                                                                                                                                                                                        result2 = parse_i();
                                                                                                                                                                                                                        if (result2 !== null) {
                                                                                                                                                                                                                          result3 = parse_h();
                                                                                                                                                                                                                          if (result3 !== null) {
                                                                                                                                                                                                                            result4 = parse_a();
                                                                                                                                                                                                                            if (result4 !== null) {
                                                                                                                                                                                                                              result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      } else {
                                                                                                                                                                                                                        result1 = null;
                                                                                                                                                                                                                        pos = pos2;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      if (result1 === null) {
                                                                                                                                                                                                                        pos2 = pos;
                                                                                                                                                                                                                        result1 = parse_x();
                                                                                                                                                                                                                        if (result1 !== null) {
                                                                                                                                                                                                                          result2 = parse_u();
                                                                                                                                                                                                                          if (result2 !== null) {
                                                                                                                                                                                                                            result1 = [result1, result2];
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        } else {
                                                                                                                                                                                                                          result1 = null;
                                                                                                                                                                                                                          pos = pos2;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if (result1 === null) {
                                                                                                                                                                                                                          pos2 = pos;
                                                                                                                                                                                                                          result1 = parse_g();
                                                                                                                                                                                                                          if (result1 !== null) {
                                                                                                                                                                                                                            result2 = parse_e();
                                                                                                                                                                                                                            if (result2 !== null) {
                                                                                                                                                                                                                              result3 = parse_h();
                                                                                                                                                                                                                              if (result3 !== null) {
                                                                                                                                                                                                                                result4 = parse_e();
                                                                                                                                                                                                                                if (result4 !== null) {
                                                                                                                                                                                                                                  result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          } else {
                                                                                                                                                                                                                            result1 = null;
                                                                                                                                                                                                                            pos = pos2;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (result1 === null) {
                                                                                                                                                                                                                            pos2 = pos;
                                                                                                                                                                                                                            result1 = parse_b();
                                                                                                                                                                                                                            if (result1 !== null) {
                                                                                                                                                                                                                              result2 = parse_u();
                                                                                                                                                                                                                              if (result2 !== null) {
                                                                                                                                                                                                                                result3 = parse_h();
                                                                                                                                                                                                                                if (result3 !== null) {
                                                                                                                                                                                                                                  result4 = parse_o();
                                                                                                                                                                                                                                  if (result4 !== null) {
                                                                                                                                                                                                                                    result1 = [result1, result2, result3, result4];
                                                                                                                                                                                                                                  } else {
                                                                                                                                                                                                                                    result1 = null;
                                                                                                                                                                                                                                    pos = pos2;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                                  result1 = null;
                                                                                                                                                                                                                                  pos = pos2;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                                result1 = null;
                                                                                                                                                                                                                                pos = pos2;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            } else {
                                                                                                                                                                                                                              result1 = null;
                                                                                                                                                                                                                              pos = pos2;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("UI", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Y() {
        var cacheKey = "Y@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result2 = parse_y();
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              result2 = parse_y();
            }
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _join(expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZEI() {
        var cacheKey = "ZEI@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_z();
          if (result1 !== null) {
            result2 = parse_e();
            if (result2 !== null) {
              result3 = parse_i();
              if (result3 !== null) {
                result1 = [result1, result2, result3];
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("ZEI", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZO() {
        var cacheKey = "ZO@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_z();
          if (result1 !== null) {
            result2 = parse_o();
            if (result2 !== null) {
              result1 = [result1, result2];
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 === null) {
            pos2 = pos;
            result1 = parse_m();
            if (result1 !== null) {
              result2 = parse_a();
              if (result2 !== null) {
                result3 = parse_h();
                if (result3 !== null) {
                  result4 = parse_o();
                  if (result4 !== null) {
                    result5 = parse_i();
                    if (result5 !== null) {
                      result1 = [result1, result2, result3, result4, result5];
                    } else {
                      result1 = null;
                      pos = pos2;
                    }
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("ZO", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ZOI() {
        var cacheKey = "ZOI@" + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var result0, result1, result2, result3, result4;
        var pos0, pos1, pos2;
        
        pos0 = pos;
        pos1 = pos;
        pos2 = pos;
        reportFailures++;
        result0 = parse_cmavo();
        reportFailures--;
        if (result0 !== null) {
          result0 = "";
          pos = pos2;
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          pos2 = pos;
          result1 = parse_z();
          if (result1 !== null) {
            result2 = parse_o();
            if (result2 !== null) {
              result3 = parse_i();
              if (result3 !== null) {
                result1 = [result1, result2, result3];
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          } else {
            result1 = null;
            pos = pos2;
          }
          if (result1 === null) {
            pos2 = pos;
            result1 = parse_l();
            if (result1 !== null) {
              result2 = parse_a();
              if (result2 !== null) {
                result3 = parse_h();
                if (result3 !== null) {
                  result4 = parse_o();
                  if (result4 !== null) {
                    result1 = [result1, result2, result3, result4];
                  } else {
                    result1 = null;
                    pos = pos2;
                  }
                } else {
                  result1 = null;
                  pos = pos2;
                }
              } else {
                result1 = null;
                pos = pos2;
              }
            } else {
              result1 = null;
              pos = pos2;
            }
          }
          if (result1 !== null) {
            pos2 = pos;
            reportFailures++;
            result2 = parse_post_word();
            reportFailures--;
            if (result2 !== null) {
              result2 = "";
              pos = pos2;
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, expr) {return _word("ZOI", expr);})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      
      function cleanupExpected(expected) {
        expected.sort();
        
        var lastExpected = null;
        var cleanExpected = [];
        for (var i = 0; i < expected.length; i++) {
          if (expected[i] !== lastExpected) {
            cleanExpected.push(expected[i]);
            lastExpected = expected[i];
          }
        }
        return cleanExpected;
      }
      
      function computeErrorPosition() {
        /*
         * The first idea was to use |String.split| to break the input up to the
         * error position along newlines and derive the line and column from
         * there. However IE's |split| implementation is so broken that it was
         * enough to prevent it.
         */
        
        var line = 1;
        var column = 1;
        var seenCR = false;
        
        for (var i = 0; i < Math.max(pos, rightmostFailuresPos); i++) {
          var ch = input.charAt(i);
          if (ch === "\n") {
            if (!seenCR) { line++; }
            column = 1;
            seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            line++;
            column = 1;
            seenCR = true;
          } else {
            column++;
            seenCR = false;
          }
        }
        
        return { line: line, column: column };
      }
      
      
        var _stressed_vowels = {a: "à", e: "è", i: "ì", o: "ò", u: "ù"};
        function _dots(arg) {
          if (arg.match(/^[aeiouàèìòùŭĭyw]/))
            return "." + arg;
          return arg;
        }
      
        var _g_zoi_delim;
        
        function _join(arg)
        {
          if (typeof(arg) == "string")
            return arg;
          else
          {
            var ret = "";
            for (var v in arg) { ret += _join(arg[v]); }
            return ret;
          }
        }
        
        function _word(selmaho, word) {
          return {selmaho: selmaho, word: _dots(_join(word))};
        }
        
        function _brivla(word) {
          if (Array.isArray(word))
            return {selmaho: "BRIVLA", word: options.k && word.join("/") || _join(word), rafsi: word};
          else
            return {selmaho: "BRIVLA", word: _join(word)};
        }
        
        function _quote(word, quote) {
          word.quote = quote;
          word.single_word = word.word;
          word.word = "[" + word.word + " " + (quote.word || quote).replace(/[\][{}()<>]/g, "") + "]";
          return word;
        }
        
        function _elided(selmaho) {
          return {selmaho: selmaho, word: selmaho.toLowerCase().replace(/h/g, "'"), elided: true};
        }
        
        function _amalgam(word, text) {
      //    if (!word.amalgam)
      //      word.amalgam = [word.word];
      //    else
      //      word.amalgam.push(word.word);
      //    word.word = text;
          word.structure = text;
          return word;
        }
        
        function _bracket(array) {
          if (Array.isArray(array)) {
            array = array.filter(_empty);
            if (array.length == 1) return _bracket(array[0]);
            else return "[" + array.map(_bracket).join(" ") + "]";
          }
          
          if (typeof array == "object" && array.structure)
            return _bracket(array.structure);
          
          if (typeof array == "object" && array.word)
            return _bracket(array.elided ? array.word.toUpperCase() : array.word);
          
          if (typeof array == "string")
            return array;
            
          return "[???]";
        }
        
        function _word_pre(word, pre) {
          if (pre && pre.length)
            word.pre = pre;
          return word;
        }
        function _word_post(word, post, sa) {
          if (post) word.post = post;
            
          if (post && post.indicators)
            _amalgam(word, [word.pre, _shell(word), post.indicators].filter(_empty));
          else
            _amalgam(word, [word.pre, _shell(word)].filter(_empty));
            
          if (_empty(sa)) word.sa = sa;
          return word;
        }
        
        function _shell(word) {
          var ret = {};
          if (word.structure) ret.structure = word.structure;
          else if (word.word) ret.word = word.word;
          if (word.selmaho) ret.selmaho = word.selmaho;
          if (word.elided) ret.elided = word.elided;
          return ret;
        }
        
        function _empty(array) {
          return array && (!Array.isArray(array) || array.length) && array;
        }
      
        function _duplicate_evil(thing) { // FIXME this murders kittens
          return JSON.parse(JSON.stringify(thing));
        }
        
        function _duplicate_less_evil(thing) {
          var clone = {};
          Object.keys(thing).forEach(function (a) { clone[a] = thing[a] });
          return clone;
        }
      
        // === ZOI functions === //
      
        function _zoi_assign_delim(word) {
          var a = word.word.split(",");
          if (a.length > 0) _g_zoi_delim = a[a.length - 1];
          else _g_zoi_delim = "";
          return word;
        }
      
        function _zoi_check_quote(word) {
          if (Array.isArray(word)) word = _join(word);
          if (typeof(word) == "object") word = word.word || word.toString();
          if (!is_string(word)) {
            alert("ZOI word is not a string");
            return false;
          } else {
            return (word.toLowerCase().replace(/,/gm,"").replace(/h/g, "'") === _g_zoi_delim);
          }
        }
        
        function _zoi_check_delim(word) {
          if (Array.isArray(word)) word = _join(word);
          if (typeof(word) == "object") word = word.word;
          if (!is_string(word)) {
            alert("ZOI word is not a string");
            return false;
          } else {
            word = word.split(",");
            if (word.length > 0) word = word[word.length - 1];
            else word = "";
            return (word === _g_zoi_delim);
          }
        }
        
        function is_string(v) {
          return typeof v.valueOf() === 'string';
        }
      
      
      var result = parseFunctions[startRule]();
      
      /*
       * The parser is now in one of the following three states:
       *
       * 1. The parser successfully parsed the whole input.
       *
       *    - |result !== null|
       *    - |pos === input.length|
       *    - |rightmostFailuresExpected| may or may not contain something
       *
       * 2. The parser successfully parsed only a part of the input.
       *
       *    - |result !== null|
       *    - |pos < input.length|
       *    - |rightmostFailuresExpected| may or may not contain something
       *
       * 3. The parser did not successfully parse any part of the input.
       *
       *   - |result === null|
       *   - |pos === 0|
       *   - |rightmostFailuresExpected| contains at least one failure
       *
       * All code following this comment (including called functions) must
       * handle these states.
       */
      if (result === null || pos !== input.length) {
        var offset = Math.max(pos, rightmostFailuresPos);
        var found = offset < input.length ? input.charAt(offset) : null;
        var errorPosition = computeErrorPosition();
        
        throw new this.SyntaxError(
          cleanupExpected(rightmostFailuresExpected),
          found,
          offset,
          errorPosition.line,
          errorPosition.column
        );
      }
      
      return result;
    },
    
    /* Returns the parser source code. */
    toSource: function() { return this._source; }
  };
  
  /* Thrown when a parser encounters a syntax error. */
  
  result.SyntaxError = function(expected, found, offset, line, column) {
    function buildMessage(expected, found) {
      var expectedHumanized, foundHumanized;
      
      switch (expected.length) {
        case 0:
          expectedHumanized = "end of input";
          break;
        case 1:
          expectedHumanized = expected[0];
          break;
        default:
          expectedHumanized = expected.slice(0, expected.length - 1).join(", ")
            + " or "
            + expected[expected.length - 1];
      }
      
      foundHumanized = found ? quote(found) : "end of input";
      
      return "Expected " + expectedHumanized + " but " + foundHumanized + " found.";
    }
    
    this.name = "SyntaxError";
    this.expected = expected;
    this.found = found;
    this.message = buildMessage(expected, found);
    this.offset = offset;
    this.line = line;
    this.column = column;
  };
  
  result.SyntaxError.prototype = Error.prototype;
  
  return result;
})()

module.exports = camxes;

term = process.argv[2];
if (term !== undefined && typeof term.valueOf() === 'string')
  console.log(JSON.stringify(camxes.parse(term)));

