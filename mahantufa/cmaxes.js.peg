//simplified morphology parser: zoi and non lojban text not supported. capital letters, illegal zunsna pairs are preprocessed
{
  function _join(a)
  {
    if (typeof(a) == "string") return a; else {var r = ""; for (var v in a) { r += _join(a[v]); } return r;}
  }

  function _node_int(a)
  {
    if (typeof(a) == "string") return a;
    var r = [];
    for (var v in a)  {r.push( _node_int( a[v] ) );}return r;
  }
}

uenzi = pause? expr:(any_word*) {return _node_int(expr);}
any_word = expr:(jbovla) pause? {return expr;}
jbovla = cmevla / expr:(cmavo) {return ["cmavo", _join(expr)];} / expr:(gismu) {return ["gismu", _join(expr)];} / expr:(!gismu !fuhivla !cmavo !(ini_vwl h y onset) lujvo_core) {return ["lujvo", _join(expr)];} / expr:(fuhivla) {return ["fu'ivla", _join(expr)];}

cmevla = expr:((&zifcme (any_syllable)* &pause) / zifcme) {return ["cmevla", _join(expr)];}
gismu = long_rafsi &stress &final_syllable pa_zei_karsna &post_word
fuhivla = fuhivla_head slaka &stress consonantal_syllable* final_syllable
cmavo = !cmevla !(CVC !stress y h? lujvo_core / CVC &stress y short_final_rafsi) (!h !(zunsna zunsna+) onset (nucleus h)* nucleus / y+) &post_word

lujvo_core = ( expr:(hy_rafsi / fuhivla_rafsi / y_rafsi / !any_fuhivla_rafsi y_less_rafsi !any_fuhivla_rafsi) {return [_join(expr),"-"];} )* (expr:(fuhivla / gismu_CVV_final_rafsi) {return [_join(expr)];} / (expr:((stressed_hy_rafsi / stressed_fuhivla_rafsi / stressed_y_rafsi / CVC_CCV_CVV &stress)) exp:(short_final_rafsi)) {return [_join(expr),"-",_join(exp)];} )

any_fuhivla_rafsi = fuhivla / fuhivla_rafsi / stressed_fuhivla_rafsi
rafsi_string = y_less_rafsi* (gismu_CVV_final_rafsi / CVC_CCV_CVV &stress !y short_final_rafsi / y_rafsi / stressed_y_rafsi / (CVC_CCV_CVV &stress !y)? initial_pair y / hy_rafsi / stressed_hy_rafsi)

fuhivla_head = !rafsi_string !cmavo !(!rafsi_string zunsna rafsi_string) !h &onset unstressed_syllable*
zifcme = !h (nucleus / glide / h / zunsna !pause)* zunsna &pause

stressed_fuhivla_rafsi = expr:(fuhivla_head slaka &stress consonantal_syllable* onset) y {return [_join(expr),""];}//if onset is ' then dont return it
fuhivla_rafsi = expr:(&unstressed_syllable fuhivla_head onset) y h? {return [_join(expr),""];}

stressed_y_rafsi = expr:(long_rafsi / CVC) &stress y {return [_join(expr),""];}
y_rafsi = expr:(long_rafsi / CVC ) !stress y h? {return [_join(expr),""];}

y_less_rafsi = !y_rafsi !stressed_y_rafsi !hy_rafsi !stressed_hy_rafsi CVC_CCV_CVV !stress !y !h

stressed_hy_rafsi = expr:((long_rafsi pa_zei_karsna / CVC_CCV_CVV )) &stress h y {return [_join(expr),""];}
hy_rafsi = expr:(long_rafsi pa_zei_karsna / CVC_CCV_CVV ) !stress h y h? {return [_join(expr),""];}

CVC = CV zunsna
CVC_CCV = CVC / ini_vwl
ini_vwl = initial_pair pa_zei_karsna

CVC_CCV_CVV = CVC_CCV / zunsna (pa_zei_karsna !stress h pa_zei_karsna / re_zei_karsna) (r &zunsna / n &r)?
gismu_CVV_final_rafsi = gismu / CV &stress h &final_syllable pa_zei_karsna &post_word
short_final_rafsi = &final_syllable (zunsna re_zei_karsna / ini_vwl) &post_word

unstressed_syllable = slaka !stress / consonantal_syllable

long_rafsi = CVC_CCV zunsna

CV = zunsna pa_zei_karsna

final_syllable = onset !y nucleus !cmevla &post_word
stress = (zunsna / glide)* h? y? slaka pause
any_syllable = !(onset y) slaka / consonantal_syllable
slaka = onset !y nucleus coda?
consonantal_syllable = zunsna &syllabic coda

coda = !any_syllable zunsna &any_syllable / syllabic? zunsna? &pause
onset = h / glide / (affricate / (cs !x / jz !(n / l / r))? (pfbgvkx / (t / d / n !r) !l / m)? (l / r)?) !zunsna !glide
nucleus = pa_zei_karsna / re_zei_karsna / y !nucleus
glide = (i / u) &nucleus !glide
re_zei_karsna = ([a] u !u / [aeo] i !i) !nucleus
pa_zei_karsna = [aeiou] !nucleus

i = [i]
u = [u]
y = [y] !(!y nucleus)

initial_pair = &onset zunsna zunsna !zunsna

affricate = t cs / d jz

zunsna = pfbgvkx / d / jz / cs / t / syllabic

syllabic = l / m / n / r

l = [l] !glide
m = [m] !glide
n = [n] !glide !affricate
r = [r] !glide
pfbgvkx = [pfbgvkx] !glide
d = [d] !glide
jz = [jz] !glide
cs = [cs] !glide
x = [x] !glide
t = [t] !glide
h = ['] &nucleus

post_word = pause / !nucleus jbovla

pause = [.\t\n\r?!\u0020]+ / !.