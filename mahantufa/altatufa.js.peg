//simplified morphology parser: zoi and non lojban text not supported. capital letters, illegal zunsna pairs are preprocessed
{
  function _join(a)
  {
    if (typeof(a) == "string") return a; else {var r = ""; for (var v in a) { r += _join(a[v]); } return r;}
  }

  function _node_int(a)
  {
    if (typeof(a) == "string") return a;
    var r = [];
    for (var v in a)  {r.push( _node_int( a[v] ) );}return r;
  }
}

text = expr:(any_word*) {return _node_int(expr);}
any_word = expr:(jbovla) {return expr;}
jbovla = _:(pause_0)  {return ["drata", _join(_)];} / _:(cmevla)  {return ["cmevla", _join(_)];} / _:(cmavo) {return ["cmavo", _join(_)];} / _:(gismu) {return ["gismu", _join(_)];} / _:(!gismu !fuhivla !cmavo !(ini_vwl h y onset) lujvo_core) {return ["lujvo", _join(_)];} / expr:(fuhivla) {return ["fu'ivla", _join(expr)];}

cmevla = (&zifcme any_syllable+ &pause) / zifcme
gismu = (initial_pair stressed_vowel / zunsna stressed_vowel zunsna) &final_syllable zunsna pa_zei_karsna &post_word
fuhivla_trim = e:(fuhivla_head) f:(slaka &stress consonantal_syllable*) {return [_join(e),"!!",_join(f)]}
fuhivla = fuhivla_trim final_syllable
cmavo = !cmevla !(cvc !stress y h? lujvo_core / cvc &stress y short_final_rafsi) (!h !(zunsna zunsna+) onset (nucleus h)* nucleus / y+) &post_word

lujvo_core = (expr:(hy_rafsi / fuhivla_rafsi / y_rafsi / !any_fuhivla_rafsi y_less_rafsi !any_fuhivla_rafsi) {return [_join(expr),"-"];} )* (expr:(fuhivla / gismu_cvv_final_rafsi) {return [_join(expr)];} / (expi:((stressed_hy_rafsi / stressed_fuhivla_rafsi / stressed_y_rafsi / e:(cvc_ccv_cvv &stress) {return ["!!",_join(e)]})) exp:(short_final_rafsi) {return [_join(expi),"-",_join(exp)];}) )

any_fuhivla_rafsi = fuhivla / fuhivla_rafsi / stressed_fuhivla_rafsi
rafsi_string = y_less_rafsi* (gismu_cvv_final_rafsi / cvc_ccv_cvv &stress !y short_final_rafsi / y_rafsi / stressed_y_rafsi / (cvc_ccv_cvv &stress !y)? initial_pair y / hy_rafsi / stressed_hy_rafsi)

fuhivla_head = !rafsi_string !cmavo !(!rafsi_string zunsna rafsi_string) !h &onset unstressed_syllable*
zifcme = !h (nucleus / glaide / h / zunsna !pause)* zunsna &pause

stressed_fuhivla_rafsi = exp:(fuhivla_trim) expr:(h y) {return [_join(exp),"-",_join(expr)]} / exp:(fuhivla_trim onset) expr:(y) {return [_join(exp),"-",_join(expr)];}
fuhivla_rafsi = &unstressed_syllable exp:(fuhivla_head) expr:(h y) {return [_join(exp),"-",_join(expr)]} / exp:(fuhivla_head onset) expr:(y h?) {return [_join(exp),"-",_join(expr)]}

stressed_y_rafsi = exp:(long_rafsi / cvc) &stress expr:(y) {return ["!!",_join(exp),"-",_join(expr)]}
y_rafsi = exp:((long_rafsi / cvc ) !stress) expr:(y h?) {return [_join(exp),"-",_join(expr)]}

y_less_rafsi = !y_rafsi !stressed_y_rafsi !hy_rafsi !stressed_hy_rafsi cvc_ccv_cvv !stress !y !h

stressed_hy_rafsi = exp:((long_rafsi pa_zei_karsna / cvc_ccv_cvv )) &stress expr:(h y) {return ["!!",_join(exp),"-",_join(expr)]}
hy_rafsi = exp:((long_rafsi pa_zei_karsna / cvc_ccv_cvv )) expr:(!stress h y h?) {return [_join(exp),"-", _join(expr)]}

cvc = cv zunsna
cvc_ccv = cvc / ini_vwl
ini_vwl = initial_pair pa_zei_karsna

cvc_ccv_cvv = cvc_ccv / cvvr
cvvr = exp:(zunsna (pa_zei_karsna !stress h pa_zei_karsna / re_zei_karsna)) expr:((r &zunsna / n &r)?) {return [_join(exp),"-",_join(expr)]}
gismu_cvv_final_rafsi = gismu / cv &stress h &final_syllable pa_zei_karsna &post_word
short_final_rafsi = &final_syllable (zunsna re_zei_karsna / ini_vwl) &post_word

unstressed_syllable = slaka !stress / consonantal_syllable

long_rafsi = exp:(cvc_ccv zunsna
)
cv = zunsna pa_zei_karsna

final_syllable = onset !y nucleus !cmevla &post_word
stress = (zunsna / glaide)* h? y? slaka pause
any_syllable = onset nucleus coda? / consonantal_syllable
slaka = onset !y nucleus coda?

consonantal_syllable = zunsna &syllabic coda

coda = !any_syllable zunsna &any_syllable / syllabic? zunsna? &pause
onset = h / zunsna? glaide / initial
nucleus = pa_zei_karsna / re_zei_karsna / y !nucleus
glaide = (톨 / w) &nucleus
re_zei_karsna = ([a] w !u / [aeo] 톨 !i) !nucleus
pa_zei_karsna = [aeiou] !nucleus

i = [i]
u = [u]
y = [y] !(!y nucleus)

톨 = [i톨]
w = [uw] {return ["u",""]}

initial = (affricate / (cs !x / jz !(n / l / r))? (pfbgvkx / (t / d / n !r) !l / m)? (l / r)?) !zunsna !glaide

initial_pair = &initial zunsna zunsna !zunsna

stressed_vowel = _:(&stressed pa_zei_karsna / pa_zei_karsna &stress) {return ["@",_join(_)]}

stressed = onset comma* [aeiou]

affricate = t cs / d jz

zunsna = pfbgvkx / d / jz / cs / t / syllabic

syllabic = l / m / n / r

l = [l]
m = [m]
n = [n] !affricate
r = [r]
pfbgvkx = [pfbgvkx]
d = [d]
jz = [jz]
cs = [cs]
x = [x]
t = [t]
h = ['] &nucleus
comma = [,]

post_word = pause / !nucleus jbovla / [\}]

pause = pause_0 / !.

pause_0 = [^a-za-z,']+